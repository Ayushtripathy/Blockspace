{"ast":null,"code":"import isNode from 'detect-node';\nimport BrowserMethod from './browser.js';\nimport NodeMethod from './node.js';\nvar USE_METHOD = isNode ? NodeMethod : BrowserMethod;\nvar LISTENERS = new Set();\nvar startedListening = false;\n\nfunction startListening() {\n  if (startedListening) return;\n  startedListening = true;\n  USE_METHOD.add(runAll);\n}\n\nexport function add(fn) {\n  startListening();\n  if (typeof fn !== 'function') throw new Error('Listener is no function');\n  LISTENERS.add(fn);\n  var addReturn = {\n    remove: function remove() {\n      return LISTENERS[\"delete\"](fn);\n    },\n    run: function run() {\n      LISTENERS[\"delete\"](fn);\n      return fn();\n    }\n  };\n  return addReturn;\n}\nexport function runAll() {\n  var promises = [];\n  LISTENERS.forEach(function (fn) {\n    promises.push(fn());\n    LISTENERS[\"delete\"](fn);\n  });\n  return Promise.all(promises);\n}\nexport function removeAll() {\n  LISTENERS.clear();\n}\nexport function getSize() {\n  return LISTENERS.size;\n}","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/unload/dist/es/index.js"],"names":["isNode","BrowserMethod","NodeMethod","USE_METHOD","LISTENERS","Set","startedListening","startListening","add","runAll","fn","Error","addReturn","remove","run","promises","forEach","push","Promise","all","removeAll","clear","getSize","size"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,cAA1B;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,IAAIC,UAAU,GAAGH,MAAM,GAAGE,UAAH,GAAgBD,aAAvC;AACA,IAAIG,SAAS,GAAG,IAAIC,GAAJ,EAAhB;AACA,IAAIC,gBAAgB,GAAG,KAAvB;;AAEA,SAASC,cAAT,GAA0B;AACxB,MAAID,gBAAJ,EAAsB;AACtBA,EAAAA,gBAAgB,GAAG,IAAnB;AACAH,EAAAA,UAAU,CAACK,GAAX,CAAeC,MAAf;AACD;;AAED,OAAO,SAASD,GAAT,CAAaE,EAAb,EAAiB;AACtBH,EAAAA,cAAc;AACd,MAAI,OAAOG,EAAP,KAAc,UAAlB,EAA8B,MAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AAC9BP,EAAAA,SAAS,CAACI,GAAV,CAAcE,EAAd;AACA,MAAIE,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,aAAOT,SAAS,CAAC,QAAD,CAAT,CAAoBM,EAApB,CAAP;AACD,KAHa;AAIdI,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClBV,MAAAA,SAAS,CAAC,QAAD,CAAT,CAAoBM,EAApB;AACA,aAAOA,EAAE,EAAT;AACD;AAPa,GAAhB;AASA,SAAOE,SAAP;AACD;AACD,OAAO,SAASH,MAAT,GAAkB;AACvB,MAAIM,QAAQ,GAAG,EAAf;AACAX,EAAAA,SAAS,CAACY,OAAV,CAAkB,UAAUN,EAAV,EAAc;AAC9BK,IAAAA,QAAQ,CAACE,IAAT,CAAcP,EAAE,EAAhB;AACAN,IAAAA,SAAS,CAAC,QAAD,CAAT,CAAoBM,EAApB;AACD,GAHD;AAIA,SAAOQ,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CAAP;AACD;AACD,OAAO,SAASK,SAAT,GAAqB;AAC1BhB,EAAAA,SAAS,CAACiB,KAAV;AACD;AACD,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOlB,SAAS,CAACmB,IAAjB;AACD","sourcesContent":["import isNode from 'detect-node';\nimport BrowserMethod from './browser.js';\nimport NodeMethod from './node.js';\nvar USE_METHOD = isNode ? NodeMethod : BrowserMethod;\nvar LISTENERS = new Set();\nvar startedListening = false;\n\nfunction startListening() {\n  if (startedListening) return;\n  startedListening = true;\n  USE_METHOD.add(runAll);\n}\n\nexport function add(fn) {\n  startListening();\n  if (typeof fn !== 'function') throw new Error('Listener is no function');\n  LISTENERS.add(fn);\n  var addReturn = {\n    remove: function remove() {\n      return LISTENERS[\"delete\"](fn);\n    },\n    run: function run() {\n      LISTENERS[\"delete\"](fn);\n      return fn();\n    }\n  };\n  return addReturn;\n}\nexport function runAll() {\n  var promises = [];\n  LISTENERS.forEach(function (fn) {\n    promises.push(fn());\n    LISTENERS[\"delete\"](fn);\n  });\n  return Promise.all(promises);\n}\nexport function removeAll() {\n  LISTENERS.clear();\n}\nexport function getSize() {\n  return LISTENERS.size;\n}"]},"metadata":{},"sourceType":"module"}