{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\n\nvar _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\n\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\n\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\n\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\n\nvar _Array$isArray = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/map\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/keys\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _values = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/values\"));\n\nvar _setTimeout2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/set-timeout\"));\n\nvar _bind = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/bind\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _EventEmitter2 = _interopRequireDefault(require(\"./EventEmitter\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _LiveQuerySubscription = _interopRequireDefault(require(\"./LiveQuerySubscription\"));\n\nvar _promiseUtils = require(\"./promiseUtils\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n\n  if (!it) {\n    if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context6;\n\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\n  var n = _sliceInstanceProperty(_context6 = Object.prototype.toString.call(o)).call(_context6, 8, -1);\n\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n} // The LiveQuery client inner state\n\n\nvar CLIENT_STATE = {\n  INITIALIZED: 'initialized',\n  CONNECTING: 'connecting',\n  CONNECTED: 'connected',\n  CLOSED: 'closed',\n  RECONNECTING: 'reconnecting',\n  DISCONNECTED: 'disconnected'\n}; // The event type the LiveQuery client should sent to server\n\nvar OP_TYPES = {\n  CONNECT: 'connect',\n  SUBSCRIBE: 'subscribe',\n  UNSUBSCRIBE: 'unsubscribe',\n  ERROR: 'error'\n}; // The event we get back from LiveQuery server\n\nvar OP_EVENTS = {\n  CONNECTED: 'connected',\n  SUBSCRIBED: 'subscribed',\n  UNSUBSCRIBED: 'unsubscribed',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n}; // The event the LiveQuery client should emit\n\nvar CLIENT_EMMITER_TYPES = {\n  CLOSE: 'close',\n  ERROR: 'error',\n  OPEN: 'open'\n}; // The event the LiveQuery subscription should emit\n\nvar SUBSCRIPTION_EMMITER_TYPES = {\n  OPEN: 'open',\n  CLOSE: 'close',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n};\n\nvar generateInterval = function (k) {\n  return Math.random() * Math.min(30, Math.pow(2, k) - 1) * 1000;\n};\n/**\n * Creates a new LiveQueryClient.\n * Extends events.EventEmitter\n * <a href=\"https://nodejs.org/api/events.html#events_class_eventemitter\">cloud functions</a>.\n *\n * A wrapper of a standard WebSocket client. We add several useful methods to\n * help you connect/disconnect to LiveQueryServer, subscribe/unsubscribe a ParseQuery easily.\n *\n * javascriptKey and masterKey are used for verifying the LiveQueryClient when it tries\n * to connect to the LiveQuery server\n *\n * We expose three events to help you monitor the status of the LiveQueryClient.\n *\n * <pre>\n * let Parse = require('parse/node');\n * let LiveQueryClient = Parse.LiveQueryClient;\n * let client = new LiveQueryClient({\n *   applicationId: '',\n *   serverURL: '',\n *   javascriptKey: '',\n *   masterKey: ''\n *  });\n * </pre>\n *\n * Open - When we establish the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('open', () => {\n *\n * });</pre>\n *\n * Close - When we lose the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('close', () => {\n *\n * });</pre>\n *\n * Error - When some network error or LiveQuery server error happens, you'll get this event.\n * <pre>\n * client.on('error', (error) => {\n *\n * });</pre>\n *\n * @alias Parse.LiveQueryClient\n */\n\n\nvar LiveQueryClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2.default)(LiveQueryClient, _EventEmitter);\n\n  var _super = _createSuper(LiveQueryClient);\n  /**\n   * @param {object} options\n   * @param {string} options.applicationId - applicationId of your Parse app\n   * @param {string} options.serverURL - <b>the URL of your LiveQuery server</b>\n   * @param {string} options.javascriptKey (optional)\n   * @param {string} options.masterKey (optional) Your Parse Master Key. (Node.js only!)\n   * @param {string} options.sessionToken (optional)\n   * @param {string} options.installationId (optional)\n   */\n\n\n  function LiveQueryClient(_ref) {\n    var _this;\n\n    var applicationId = _ref.applicationId,\n        serverURL = _ref.serverURL,\n        javascriptKey = _ref.javascriptKey,\n        masterKey = _ref.masterKey,\n        sessionToken = _ref.sessionToken,\n        installationId = _ref.installationId;\n    (0, _classCallCheck2.default)(this, LiveQueryClient);\n    _this = _super.call(this);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"attempts\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"id\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"requestId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"applicationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"serverURL\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"javascriptKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"masterKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"sessionToken\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"installationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"additionalProperties\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"connectPromise\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"subscriptions\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"socket\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", void 0);\n\n    if (!serverURL || (0, _indexOf.default)(serverURL).call(serverURL, 'ws') !== 0) {\n      throw new Error('You need to set a proper Parse LiveQuery server url before using LiveQueryClient');\n    }\n\n    _this.reconnectHandle = null;\n    _this.attempts = 1;\n    _this.id = 0;\n    _this.requestId = 1;\n    _this.serverURL = serverURL;\n    _this.applicationId = applicationId;\n    _this.javascriptKey = javascriptKey || undefined;\n    _this.masterKey = masterKey || undefined;\n    _this.sessionToken = sessionToken || undefined;\n    _this.installationId = installationId || undefined;\n    _this.additionalProperties = true;\n    _this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n    _this.subscriptions = new _map.default();\n    _this.state = CLIENT_STATE.INITIALIZED; // adding listener so process does not crash\n    // best practice is for developer to register their own listener\n\n    _this.on('error', function () {});\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(LiveQueryClient, [{\n    key: \"shouldOpen\",\n    value: function ()\n    /*: any*/\n    {\n      return this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED;\n    }\n    /**\n     * Subscribes to a ParseQuery\n     *\n     * If you provide the sessionToken, when the LiveQuery server gets ParseObject's\n     * updates from parse server, it'll try to check whether the sessionToken fulfills\n     * the ParseObject's ACL. The LiveQuery server will only send updates to clients whose\n     * sessionToken is fit for the ParseObject's ACL. You can check the LiveQuery protocol\n     * <a href=\"https://github.com/parse-community/parse-server/wiki/Parse-LiveQuery-Protocol-Specification\">here</a> for more details. The subscription you get is the same subscription you get\n     * from our Standard API.\n     *\n     * @param {object} query - the ParseQuery you want to subscribe to\n     * @param {string} sessionToken (optional)\n     * @returns {LiveQuerySubscription} subscription\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function (query\n    /*: Object*/\n    , sessionToken\n    /*: ?string*/\n    )\n    /*: LiveQuerySubscription*/\n    {\n      var _this2 = this;\n\n      if (!query) {\n        return;\n      }\n\n      var className = query.className;\n      var queryJSON = query.toJSON();\n      var where = queryJSON.where;\n      var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n      var subscribeRequest = {\n        op: OP_TYPES.SUBSCRIBE,\n        requestId: this.requestId,\n        query: {\n          className: className,\n          where: where,\n          fields: fields\n        }\n      };\n\n      if (sessionToken) {\n        subscribeRequest.sessionToken = sessionToken;\n      }\n\n      var subscription = new _LiveQuerySubscription.default(this.requestId, query, sessionToken);\n      this.subscriptions.set(this.requestId, subscription);\n      this.requestId += 1;\n      this.connectPromise.then(function () {\n        _this2.socket.send((0, _stringify.default)(subscribeRequest));\n      });\n      return subscription;\n    }\n    /**\n     * After calling unsubscribe you'll stop receiving events from the subscription object.\n     *\n     * @param {object} subscription - subscription you would like to unsubscribe from.\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function (subscription\n    /*: Object*/\n    ) {\n      var _this3 = this;\n\n      if (!subscription) {\n        return;\n      }\n\n      this.subscriptions.delete(subscription.id);\n      var unsubscribeRequest = {\n        op: OP_TYPES.UNSUBSCRIBE,\n        requestId: subscription.id\n      };\n      this.connectPromise.then(function () {\n        _this3.socket.send((0, _stringify.default)(unsubscribeRequest));\n      });\n    }\n    /**\n     * After open is called, the LiveQueryClient will try to send a connect request\n     * to the LiveQuery server.\n     *\n     */\n\n  }, {\n    key: \"open\",\n    value: function () {\n      var _this4 = this;\n\n      var WebSocketImplementation = _CoreManager.default.getWebSocketController();\n\n      if (!WebSocketImplementation) {\n        this.emit(CLIENT_EMMITER_TYPES.ERROR, 'Can not find WebSocket implementation');\n        return;\n      }\n\n      if (this.state !== CLIENT_STATE.RECONNECTING) {\n        this.state = CLIENT_STATE.CONNECTING;\n      }\n\n      this.socket = new WebSocketImplementation(this.serverURL); // Bind WebSocket callbacks\n\n      this.socket.onopen = function () {\n        _this4._handleWebSocketOpen();\n      };\n\n      this.socket.onmessage = function (event) {\n        _this4._handleWebSocketMessage(event);\n      };\n\n      this.socket.onclose = function () {\n        _this4._handleWebSocketClose();\n      };\n\n      this.socket.onerror = function (error) {\n        _this4._handleWebSocketError(error);\n      };\n    }\n  }, {\n    key: \"resubscribe\",\n    value: function () {\n      var _context,\n          _this5 = this;\n\n      (0, _forEach.default)(_context = this.subscriptions).call(_context, function (subscription, requestId) {\n        var query = subscription.query;\n        var queryJSON = query.toJSON();\n        var where = queryJSON.where;\n        var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n        var className = query.className;\n        var sessionToken = subscription.sessionToken;\n        var subscribeRequest = {\n          op: OP_TYPES.SUBSCRIBE,\n          requestId: requestId,\n          query: {\n            className: className,\n            where: where,\n            fields: fields\n          }\n        };\n\n        if (sessionToken) {\n          subscribeRequest.sessionToken = sessionToken;\n        }\n\n        _this5.connectPromise.then(function () {\n          _this5.socket.send((0, _stringify.default)(subscribeRequest));\n        });\n      });\n    }\n    /**\n     * This method will close the WebSocket connection to this LiveQueryClient,\n     * cancel the auto reconnect and unsubscribe all subscriptions based on it.\n     *\n     */\n\n  }, {\n    key: \"close\",\n    value: function () {\n      var _context2;\n\n      if (this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.DISCONNECTED;\n      this.socket.close(); // Notify each subscription about the close\n\n      var _iterator = _createForOfIteratorHelper((0, _values.default)(_context2 = this.subscriptions).call(_context2)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var subscription = _step.value;\n          subscription.subscribed = false;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this._handleReset();\n\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE);\n    } // ensure we start with valid state if connect is called again after close\n\n  }, {\n    key: \"_handleReset\",\n    value: function () {\n      this.attempts = 1;\n      this.id = 0;\n      this.requestId = 1;\n      this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n      this.subscriptions = new _map.default();\n    }\n  }, {\n    key: \"_handleWebSocketOpen\",\n    value: function () {\n      this.attempts = 1;\n      var connectRequest = {\n        op: OP_TYPES.CONNECT,\n        applicationId: this.applicationId,\n        javascriptKey: this.javascriptKey,\n        masterKey: this.masterKey,\n        sessionToken: this.sessionToken\n      };\n\n      if (this.additionalProperties) {\n        connectRequest.installationId = this.installationId;\n      }\n\n      this.socket.send((0, _stringify.default)(connectRequest));\n    }\n  }, {\n    key: \"_handleWebSocketMessage\",\n    value: function (event\n    /*: any*/\n    ) {\n      var data = event.data;\n\n      if (typeof data === 'string') {\n        data = JSON.parse(data);\n      }\n\n      var subscription = null;\n\n      if (data.requestId) {\n        subscription = this.subscriptions.get(data.requestId);\n      }\n\n      var response = {\n        clientId: data.clientId,\n        installationId: data.installationId\n      };\n\n      switch (data.op) {\n        case OP_EVENTS.CONNECTED:\n          if (this.state === CLIENT_STATE.RECONNECTING) {\n            this.resubscribe();\n          }\n\n          this.emit(CLIENT_EMMITER_TYPES.OPEN);\n          this.id = data.clientId;\n          this.connectPromise.resolve();\n          this.state = CLIENT_STATE.CONNECTED;\n          break;\n\n        case OP_EVENTS.SUBSCRIBED:\n          if (subscription) {\n            subscription.subscribed = true;\n            subscription.subscribePromise.resolve();\n            (0, _setTimeout2.default)(function () {\n              return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.OPEN, response);\n            }, 200);\n          }\n\n          break;\n\n        case OP_EVENTS.ERROR:\n          if (data.requestId) {\n            if (subscription) {\n              subscription.subscribePromise.resolve();\n              (0, _setTimeout2.default)(function () {\n                return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, data.error);\n              }, 200);\n            }\n          } else {\n            this.emit(CLIENT_EMMITER_TYPES.ERROR, data.error);\n          }\n\n          if (data.error === 'Additional properties not allowed') {\n            this.additionalProperties = false;\n          }\n\n          if (data.reconnect) {\n            this._handleReconnect();\n          }\n\n          break;\n\n        case OP_EVENTS.UNSUBSCRIBED:\n          // We have already deleted subscription in unsubscribe(), do nothing here\n          break;\n\n        default:\n          {\n            // create, update, enter, leave, delete cases\n            if (!subscription) {\n              break;\n            }\n\n            var override = false;\n\n            if (data.original) {\n              override = true;\n              delete data.original.__type; // Check for removed fields\n\n              for (var field in data.original) {\n                if (!(field in data.object)) {\n                  data.object[field] = undefined;\n                }\n              }\n\n              data.original = _ParseObject.default.fromJSON(data.original, false);\n            }\n\n            delete data.object.__type;\n\n            var parseObject = _ParseObject.default.fromJSON(data.object, override);\n\n            if (data.original) {\n              subscription.emit(data.op, parseObject, data.original, response);\n            } else {\n              subscription.emit(data.op, parseObject, response);\n            }\n\n            var localDatastore = _CoreManager.default.getLocalDatastore();\n\n            if (override && localDatastore.isEnabled) {\n              localDatastore._updateObjectIfPinned(parseObject).then(function () {});\n            }\n          }\n      }\n    }\n  }, {\n    key: \"_handleWebSocketClose\",\n    value: function () {\n      var _context3;\n\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.CLOSED;\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE); // Notify each subscription about the close\n\n      var _iterator2 = _createForOfIteratorHelper((0, _values.default)(_context3 = this.subscriptions).call(_context3)),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var subscription = _step2.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleWebSocketError\",\n    value: function (error\n    /*: any*/\n    ) {\n      var _context4;\n\n      this.emit(CLIENT_EMMITER_TYPES.ERROR, error);\n\n      var _iterator3 = _createForOfIteratorHelper((0, _values.default)(_context4 = this.subscriptions).call(_context4)),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var subscription = _step3.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, error);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleReconnect\",\n    value: function () {\n      var _context5,\n          _this6 = this; // if closed or currently reconnecting we stop attempting to reconnect\n\n\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.RECONNECTING;\n      var time = generateInterval(this.attempts); // handle case when both close/error occur at frequent rates we ensure we do not reconnect unnecessarily.\n      // we're unable to distinguish different between close/error when we're unable to reconnect therefore\n      // we try to reconnect in both cases\n      // server side ws and browser WebSocket behave differently in when close/error get triggered\n\n      if (this.reconnectHandle) {\n        clearTimeout(this.reconnectHandle);\n      }\n\n      this.reconnectHandle = (0, _setTimeout2.default)((0, _bind.default)(_context5 = function () {\n        _this6.attempts++;\n        _this6.connectPromise = (0, _promiseUtils.resolvingPromise)();\n\n        _this6.open();\n      }).call(_context5, this), time);\n    }\n  }]);\n  return LiveQueryClient;\n}(_EventEmitter2.default);\n\n_CoreManager.default.setWebSocketController(typeof WebSocket === 'function' || (typeof WebSocket === \"undefined\" ? \"undefined\" : (0, _typeof2.default)(WebSocket)) === 'object' ? WebSocket : null);\n\nvar _default = LiveQueryClient;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/moralis/lib/browser/LiveQueryClient.js"],"names":["_Reflect$construct","require","_sliceInstanceProperty","_Array$from","_Symbol","_getIteratorMethod","_Array$isArray","_Object$defineProperty","_interopRequireDefault","exports","value","default","_indexOf","_map","_keys","_stringify","_forEach","_values","_setTimeout2","_bind","_typeof2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_defineProperty2","_CoreManager","_EventEmitter2","_ParseObject","_LiveQuerySubscription","_promiseUtils","_createForOfIteratorHelper","o","allowArrayLike","it","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_context6","_arrayLikeToArray","Object","prototype","toString","constructor","name","test","arr","len","arr2","Array","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","result","NewTarget","arguments","apply","Reflect","sham","Proxy","Boolean","valueOf","CLIENT_STATE","INITIALIZED","CONNECTING","CONNECTED","CLOSED","RECONNECTING","DISCONNECTED","OP_TYPES","CONNECT","SUBSCRIBE","UNSUBSCRIBE","ERROR","OP_EVENTS","SUBSCRIBED","UNSUBSCRIBED","CREATE","UPDATE","ENTER","LEAVE","DELETE","CLIENT_EMMITER_TYPES","CLOSE","OPEN","SUBSCRIPTION_EMMITER_TYPES","generateInterval","k","Math","random","min","pow","LiveQueryClient","_EventEmitter","_super","_ref","_this","applicationId","serverURL","javascriptKey","masterKey","sessionToken","installationId","Error","reconnectHandle","attempts","id","requestId","undefined","additionalProperties","connectPromise","resolvingPromise","subscriptions","state","on","key","query","_this2","className","queryJSON","toJSON","where","fields","split","subscribeRequest","op","subscription","set","then","socket","send","_this3","delete","unsubscribeRequest","_this4","WebSocketImplementation","getWebSocketController","emit","onopen","_handleWebSocketOpen","onmessage","event","_handleWebSocketMessage","onclose","_handleWebSocketClose","onerror","error","_handleWebSocketError","_context","_this5","_context2","close","_iterator","_step","subscribed","_handleReset","connectRequest","data","JSON","parse","get","response","clientId","resubscribe","resolve","subscribePromise","reconnect","_handleReconnect","override","original","__type","field","object","fromJSON","parseObject","localDatastore","getLocalDatastore","isEnabled","_updateObjectIfPinned","_context3","_iterator2","_step2","_context4","_iterator3","_step3","_context5","_this6","time","clearTimeout","open","setWebSocketController","WebSocket","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\n\nvar _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\n\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\n\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\n\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\n\nvar _Array$isArray = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/map\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/keys\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _values = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/values\"));\n\nvar _setTimeout2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/set-timeout\"));\n\nvar _bind = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/bind\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _EventEmitter2 = _interopRequireDefault(require(\"./EventEmitter\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _LiveQuerySubscription = _interopRequireDefault(require(\"./LiveQuerySubscription\"));\n\nvar _promiseUtils = require(\"./promiseUtils\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n\n  if (!it) {\n    if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context6;\n\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\n  var n = _sliceInstanceProperty(_context6 = Object.prototype.toString.call(o)).call(_context6, 8, -1);\n\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n} // The LiveQuery client inner state\n\n\nvar CLIENT_STATE = {\n  INITIALIZED: 'initialized',\n  CONNECTING: 'connecting',\n  CONNECTED: 'connected',\n  CLOSED: 'closed',\n  RECONNECTING: 'reconnecting',\n  DISCONNECTED: 'disconnected'\n}; // The event type the LiveQuery client should sent to server\n\nvar OP_TYPES = {\n  CONNECT: 'connect',\n  SUBSCRIBE: 'subscribe',\n  UNSUBSCRIBE: 'unsubscribe',\n  ERROR: 'error'\n}; // The event we get back from LiveQuery server\n\nvar OP_EVENTS = {\n  CONNECTED: 'connected',\n  SUBSCRIBED: 'subscribed',\n  UNSUBSCRIBED: 'unsubscribed',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n}; // The event the LiveQuery client should emit\n\nvar CLIENT_EMMITER_TYPES = {\n  CLOSE: 'close',\n  ERROR: 'error',\n  OPEN: 'open'\n}; // The event the LiveQuery subscription should emit\n\nvar SUBSCRIPTION_EMMITER_TYPES = {\n  OPEN: 'open',\n  CLOSE: 'close',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n};\n\nvar generateInterval = function (k) {\n  return Math.random() * Math.min(30, Math.pow(2, k) - 1) * 1000;\n};\n/**\n * Creates a new LiveQueryClient.\n * Extends events.EventEmitter\n * <a href=\"https://nodejs.org/api/events.html#events_class_eventemitter\">cloud functions</a>.\n *\n * A wrapper of a standard WebSocket client. We add several useful methods to\n * help you connect/disconnect to LiveQueryServer, subscribe/unsubscribe a ParseQuery easily.\n *\n * javascriptKey and masterKey are used for verifying the LiveQueryClient when it tries\n * to connect to the LiveQuery server\n *\n * We expose three events to help you monitor the status of the LiveQueryClient.\n *\n * <pre>\n * let Parse = require('parse/node');\n * let LiveQueryClient = Parse.LiveQueryClient;\n * let client = new LiveQueryClient({\n *   applicationId: '',\n *   serverURL: '',\n *   javascriptKey: '',\n *   masterKey: ''\n *  });\n * </pre>\n *\n * Open - When we establish the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('open', () => {\n *\n * });</pre>\n *\n * Close - When we lose the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('close', () => {\n *\n * });</pre>\n *\n * Error - When some network error or LiveQuery server error happens, you'll get this event.\n * <pre>\n * client.on('error', (error) => {\n *\n * });</pre>\n *\n * @alias Parse.LiveQueryClient\n */\n\n\nvar LiveQueryClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2.default)(LiveQueryClient, _EventEmitter);\n\n  var _super = _createSuper(LiveQueryClient);\n  /**\n   * @param {object} options\n   * @param {string} options.applicationId - applicationId of your Parse app\n   * @param {string} options.serverURL - <b>the URL of your LiveQuery server</b>\n   * @param {string} options.javascriptKey (optional)\n   * @param {string} options.masterKey (optional) Your Parse Master Key. (Node.js only!)\n   * @param {string} options.sessionToken (optional)\n   * @param {string} options.installationId (optional)\n   */\n\n\n  function LiveQueryClient(_ref) {\n    var _this;\n\n    var applicationId = _ref.applicationId,\n        serverURL = _ref.serverURL,\n        javascriptKey = _ref.javascriptKey,\n        masterKey = _ref.masterKey,\n        sessionToken = _ref.sessionToken,\n        installationId = _ref.installationId;\n    (0, _classCallCheck2.default)(this, LiveQueryClient);\n    _this = _super.call(this);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"attempts\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"id\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"requestId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"applicationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"serverURL\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"javascriptKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"masterKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"sessionToken\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"installationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"additionalProperties\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"connectPromise\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"subscriptions\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"socket\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", void 0);\n\n    if (!serverURL || (0, _indexOf.default)(serverURL).call(serverURL, 'ws') !== 0) {\n      throw new Error('You need to set a proper Parse LiveQuery server url before using LiveQueryClient');\n    }\n\n    _this.reconnectHandle = null;\n    _this.attempts = 1;\n    _this.id = 0;\n    _this.requestId = 1;\n    _this.serverURL = serverURL;\n    _this.applicationId = applicationId;\n    _this.javascriptKey = javascriptKey || undefined;\n    _this.masterKey = masterKey || undefined;\n    _this.sessionToken = sessionToken || undefined;\n    _this.installationId = installationId || undefined;\n    _this.additionalProperties = true;\n    _this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n    _this.subscriptions = new _map.default();\n    _this.state = CLIENT_STATE.INITIALIZED; // adding listener so process does not crash\n    // best practice is for developer to register their own listener\n\n    _this.on('error', function () {});\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(LiveQueryClient, [{\n    key: \"shouldOpen\",\n    value: function ()\n    /*: any*/\n    {\n      return this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED;\n    }\n    /**\n     * Subscribes to a ParseQuery\n     *\n     * If you provide the sessionToken, when the LiveQuery server gets ParseObject's\n     * updates from parse server, it'll try to check whether the sessionToken fulfills\n     * the ParseObject's ACL. The LiveQuery server will only send updates to clients whose\n     * sessionToken is fit for the ParseObject's ACL. You can check the LiveQuery protocol\n     * <a href=\"https://github.com/parse-community/parse-server/wiki/Parse-LiveQuery-Protocol-Specification\">here</a> for more details. The subscription you get is the same subscription you get\n     * from our Standard API.\n     *\n     * @param {object} query - the ParseQuery you want to subscribe to\n     * @param {string} sessionToken (optional)\n     * @returns {LiveQuerySubscription} subscription\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function (query\n    /*: Object*/\n    , sessionToken\n    /*: ?string*/\n    )\n    /*: LiveQuerySubscription*/\n    {\n      var _this2 = this;\n\n      if (!query) {\n        return;\n      }\n\n      var className = query.className;\n      var queryJSON = query.toJSON();\n      var where = queryJSON.where;\n      var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n      var subscribeRequest = {\n        op: OP_TYPES.SUBSCRIBE,\n        requestId: this.requestId,\n        query: {\n          className: className,\n          where: where,\n          fields: fields\n        }\n      };\n\n      if (sessionToken) {\n        subscribeRequest.sessionToken = sessionToken;\n      }\n\n      var subscription = new _LiveQuerySubscription.default(this.requestId, query, sessionToken);\n      this.subscriptions.set(this.requestId, subscription);\n      this.requestId += 1;\n      this.connectPromise.then(function () {\n        _this2.socket.send((0, _stringify.default)(subscribeRequest));\n      });\n      return subscription;\n    }\n    /**\n     * After calling unsubscribe you'll stop receiving events from the subscription object.\n     *\n     * @param {object} subscription - subscription you would like to unsubscribe from.\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function (subscription\n    /*: Object*/\n    ) {\n      var _this3 = this;\n\n      if (!subscription) {\n        return;\n      }\n\n      this.subscriptions.delete(subscription.id);\n      var unsubscribeRequest = {\n        op: OP_TYPES.UNSUBSCRIBE,\n        requestId: subscription.id\n      };\n      this.connectPromise.then(function () {\n        _this3.socket.send((0, _stringify.default)(unsubscribeRequest));\n      });\n    }\n    /**\n     * After open is called, the LiveQueryClient will try to send a connect request\n     * to the LiveQuery server.\n     *\n     */\n\n  }, {\n    key: \"open\",\n    value: function () {\n      var _this4 = this;\n\n      var WebSocketImplementation = _CoreManager.default.getWebSocketController();\n\n      if (!WebSocketImplementation) {\n        this.emit(CLIENT_EMMITER_TYPES.ERROR, 'Can not find WebSocket implementation');\n        return;\n      }\n\n      if (this.state !== CLIENT_STATE.RECONNECTING) {\n        this.state = CLIENT_STATE.CONNECTING;\n      }\n\n      this.socket = new WebSocketImplementation(this.serverURL); // Bind WebSocket callbacks\n\n      this.socket.onopen = function () {\n        _this4._handleWebSocketOpen();\n      };\n\n      this.socket.onmessage = function (event) {\n        _this4._handleWebSocketMessage(event);\n      };\n\n      this.socket.onclose = function () {\n        _this4._handleWebSocketClose();\n      };\n\n      this.socket.onerror = function (error) {\n        _this4._handleWebSocketError(error);\n      };\n    }\n  }, {\n    key: \"resubscribe\",\n    value: function () {\n      var _context,\n          _this5 = this;\n\n      (0, _forEach.default)(_context = this.subscriptions).call(_context, function (subscription, requestId) {\n        var query = subscription.query;\n        var queryJSON = query.toJSON();\n        var where = queryJSON.where;\n        var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n        var className = query.className;\n        var sessionToken = subscription.sessionToken;\n        var subscribeRequest = {\n          op: OP_TYPES.SUBSCRIBE,\n          requestId: requestId,\n          query: {\n            className: className,\n            where: where,\n            fields: fields\n          }\n        };\n\n        if (sessionToken) {\n          subscribeRequest.sessionToken = sessionToken;\n        }\n\n        _this5.connectPromise.then(function () {\n          _this5.socket.send((0, _stringify.default)(subscribeRequest));\n        });\n      });\n    }\n    /**\n     * This method will close the WebSocket connection to this LiveQueryClient,\n     * cancel the auto reconnect and unsubscribe all subscriptions based on it.\n     *\n     */\n\n  }, {\n    key: \"close\",\n    value: function () {\n      var _context2;\n\n      if (this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.DISCONNECTED;\n      this.socket.close(); // Notify each subscription about the close\n\n      var _iterator = _createForOfIteratorHelper((0, _values.default)(_context2 = this.subscriptions).call(_context2)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var subscription = _step.value;\n          subscription.subscribed = false;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this._handleReset();\n\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE);\n    } // ensure we start with valid state if connect is called again after close\n\n  }, {\n    key: \"_handleReset\",\n    value: function () {\n      this.attempts = 1;\n      this.id = 0;\n      this.requestId = 1;\n      this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n      this.subscriptions = new _map.default();\n    }\n  }, {\n    key: \"_handleWebSocketOpen\",\n    value: function () {\n      this.attempts = 1;\n      var connectRequest = {\n        op: OP_TYPES.CONNECT,\n        applicationId: this.applicationId,\n        javascriptKey: this.javascriptKey,\n        masterKey: this.masterKey,\n        sessionToken: this.sessionToken\n      };\n\n      if (this.additionalProperties) {\n        connectRequest.installationId = this.installationId;\n      }\n\n      this.socket.send((0, _stringify.default)(connectRequest));\n    }\n  }, {\n    key: \"_handleWebSocketMessage\",\n    value: function (event\n    /*: any*/\n    ) {\n      var data = event.data;\n\n      if (typeof data === 'string') {\n        data = JSON.parse(data);\n      }\n\n      var subscription = null;\n\n      if (data.requestId) {\n        subscription = this.subscriptions.get(data.requestId);\n      }\n\n      var response = {\n        clientId: data.clientId,\n        installationId: data.installationId\n      };\n\n      switch (data.op) {\n        case OP_EVENTS.CONNECTED:\n          if (this.state === CLIENT_STATE.RECONNECTING) {\n            this.resubscribe();\n          }\n\n          this.emit(CLIENT_EMMITER_TYPES.OPEN);\n          this.id = data.clientId;\n          this.connectPromise.resolve();\n          this.state = CLIENT_STATE.CONNECTED;\n          break;\n\n        case OP_EVENTS.SUBSCRIBED:\n          if (subscription) {\n            subscription.subscribed = true;\n            subscription.subscribePromise.resolve();\n            (0, _setTimeout2.default)(function () {\n              return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.OPEN, response);\n            }, 200);\n          }\n\n          break;\n\n        case OP_EVENTS.ERROR:\n          if (data.requestId) {\n            if (subscription) {\n              subscription.subscribePromise.resolve();\n              (0, _setTimeout2.default)(function () {\n                return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, data.error);\n              }, 200);\n            }\n          } else {\n            this.emit(CLIENT_EMMITER_TYPES.ERROR, data.error);\n          }\n\n          if (data.error === 'Additional properties not allowed') {\n            this.additionalProperties = false;\n          }\n\n          if (data.reconnect) {\n            this._handleReconnect();\n          }\n\n          break;\n\n        case OP_EVENTS.UNSUBSCRIBED:\n          // We have already deleted subscription in unsubscribe(), do nothing here\n          break;\n\n        default:\n          {\n            // create, update, enter, leave, delete cases\n            if (!subscription) {\n              break;\n            }\n\n            var override = false;\n\n            if (data.original) {\n              override = true;\n              delete data.original.__type; // Check for removed fields\n\n              for (var field in data.original) {\n                if (!(field in data.object)) {\n                  data.object[field] = undefined;\n                }\n              }\n\n              data.original = _ParseObject.default.fromJSON(data.original, false);\n            }\n\n            delete data.object.__type;\n\n            var parseObject = _ParseObject.default.fromJSON(data.object, override);\n\n            if (data.original) {\n              subscription.emit(data.op, parseObject, data.original, response);\n            } else {\n              subscription.emit(data.op, parseObject, response);\n            }\n\n            var localDatastore = _CoreManager.default.getLocalDatastore();\n\n            if (override && localDatastore.isEnabled) {\n              localDatastore._updateObjectIfPinned(parseObject).then(function () {});\n            }\n          }\n      }\n    }\n  }, {\n    key: \"_handleWebSocketClose\",\n    value: function () {\n      var _context3;\n\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.CLOSED;\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE); // Notify each subscription about the close\n\n      var _iterator2 = _createForOfIteratorHelper((0, _values.default)(_context3 = this.subscriptions).call(_context3)),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var subscription = _step2.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleWebSocketError\",\n    value: function (error\n    /*: any*/\n    ) {\n      var _context4;\n\n      this.emit(CLIENT_EMMITER_TYPES.ERROR, error);\n\n      var _iterator3 = _createForOfIteratorHelper((0, _values.default)(_context4 = this.subscriptions).call(_context4)),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var subscription = _step3.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, error);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleReconnect\",\n    value: function () {\n      var _context5,\n          _this6 = this; // if closed or currently reconnecting we stop attempting to reconnect\n\n\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.RECONNECTING;\n      var time = generateInterval(this.attempts); // handle case when both close/error occur at frequent rates we ensure we do not reconnect unnecessarily.\n      // we're unable to distinguish different between close/error when we're unable to reconnect therefore\n      // we try to reconnect in both cases\n      // server side ws and browser WebSocket behave differently in when close/error get triggered\n\n      if (this.reconnectHandle) {\n        clearTimeout(this.reconnectHandle);\n      }\n\n      this.reconnectHandle = (0, _setTimeout2.default)((0, _bind.default)(_context5 = function () {\n        _this6.attempts++;\n        _this6.connectPromise = (0, _promiseUtils.resolvingPromise)();\n\n        _this6.open();\n      }).call(_context5, this), time);\n    }\n  }]);\n  return LiveQueryClient;\n}(_EventEmitter2.default);\n\n_CoreManager.default.setWebSocketController(typeof WebSocket === 'function' || (typeof WebSocket === \"undefined\" ? \"undefined\" : (0, _typeof2.default)(WebSocket)) === 'object' ? WebSocket : null);\n\nvar _default = LiveQueryClient;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}