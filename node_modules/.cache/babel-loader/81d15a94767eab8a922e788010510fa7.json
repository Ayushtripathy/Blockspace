{"ast":null,"code":"module.exports = stringify;\nstringify.default = stringify;\nstringify.stable = deterministicStringify;\nstringify.stableStringify = deterministicStringify;\nvar LIMIT_REPLACE_NODE = '[...]';\nvar CIRCULAR_REPLACE_NODE = '[Circular]';\nvar arr = [];\nvar replacerStack = [];\n\nfunction defaultOptions() {\n  return {\n    depthLimit: Number.MAX_SAFE_INTEGER,\n    edgesLimit: Number.MAX_SAFE_INTEGER\n  };\n} // Regular stringify\n\n\nfunction stringify(obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions();\n  }\n\n  decirc(obj, '', 0, [], undefined, 0, options);\n  var res;\n\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(obj, replacer, spacer);\n    } else {\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer);\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]');\n  } finally {\n    while (arr.length !== 0) {\n      var part = arr.pop();\n\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3]);\n      } else {\n        part[0][part[1]] = part[2];\n      }\n    }\n  }\n\n  return res;\n}\n\nfunction setReplace(replace, val, k, parent) {\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k);\n\n  if (propertyDescriptor.get !== undefined) {\n    if (propertyDescriptor.configurable) {\n      Object.defineProperty(parent, k, {\n        value: replace\n      });\n      arr.push([parent, k, val, propertyDescriptor]);\n    } else {\n      replacerStack.push([val, k, replace]);\n    }\n  } else {\n    parent[k] = replace;\n    arr.push([parent, k, val]);\n  }\n}\n\nfunction decirc(val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1;\n  var i;\n\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);\n        return;\n      }\n    }\n\n    if (typeof options.depthLimit !== 'undefined' && depth > options.depthLimit) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n      return;\n    }\n\n    if (typeof options.edgesLimit !== 'undefined' && edgeIndex + 1 > options.edgesLimit) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n      return;\n    }\n\n    stack.push(val); // Optimize for Arrays. Big arrays could kill the performance otherwise!\n\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, i, stack, val, depth, options);\n      }\n    } else {\n      var keys = Object.keys(val);\n\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        decirc(val[key], key, i, stack, val, depth, options);\n      }\n    }\n\n    stack.pop();\n  }\n} // Stable-stringify\n\n\nfunction compareFunction(a, b) {\n  if (a < b) {\n    return -1;\n  }\n\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction deterministicStringify(obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions();\n  }\n\n  var tmp = deterministicDecirc(obj, '', 0, [], undefined, 0, options) || obj;\n  var res;\n\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(tmp, replacer, spacer);\n    } else {\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer);\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]');\n  } finally {\n    // Ensure that we restore the object as it was.\n    while (arr.length !== 0) {\n      var part = arr.pop();\n\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3]);\n      } else {\n        part[0][part[1]] = part[2];\n      }\n    }\n  }\n\n  return res;\n}\n\nfunction deterministicDecirc(val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1;\n  var i;\n\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);\n        return;\n      }\n    }\n\n    try {\n      if (typeof val.toJSON === 'function') {\n        return;\n      }\n    } catch (_) {\n      return;\n    }\n\n    if (typeof options.depthLimit !== 'undefined' && depth > options.depthLimit) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n      return;\n    }\n\n    if (typeof options.edgesLimit !== 'undefined' && edgeIndex + 1 > options.edgesLimit) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n      return;\n    }\n\n    stack.push(val); // Optimize for Arrays. Big arrays could kill the performance otherwise!\n\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, i, stack, val, depth, options);\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {};\n      var keys = Object.keys(val).sort(compareFunction);\n\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        deterministicDecirc(val[key], key, i, stack, val, depth, options);\n        tmp[key] = val[key];\n      }\n\n      if (typeof parent !== 'undefined') {\n        arr.push([parent, k, val]);\n        parent[k] = tmp;\n      } else {\n        return tmp;\n      }\n    }\n\n    stack.pop();\n  }\n} // wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\n\n\nfunction replaceGetterValues(replacer) {\n  replacer = typeof replacer !== 'undefined' ? replacer : function (k, v) {\n    return v;\n  };\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i];\n\n        if (part[1] === key && part[0] === val) {\n          val = part[2];\n          replacerStack.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    return replacer.call(this, key, val);\n  };\n}","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/fast-safe-stringify/index.js"],"names":["module","exports","stringify","default","stable","deterministicStringify","stableStringify","LIMIT_REPLACE_NODE","CIRCULAR_REPLACE_NODE","arr","replacerStack","defaultOptions","depthLimit","Number","MAX_SAFE_INTEGER","edgesLimit","obj","replacer","spacer","options","decirc","undefined","res","length","JSON","replaceGetterValues","_","part","pop","Object","defineProperty","setReplace","replace","val","k","parent","propertyDescriptor","getOwnPropertyDescriptor","get","configurable","value","push","edgeIndex","stack","depth","i","Array","isArray","keys","key","compareFunction","a","b","tmp","deterministicDecirc","toJSON","sort","v","splice","call"],"mappings":"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","sourcesContent":["module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar LIMIT_REPLACE_NODE = '[...]'\nvar CIRCULAR_REPLACE_NODE = '[Circular]'\n\nvar arr = []\nvar replacerStack = []\n\nfunction defaultOptions () {\n  return {\n    depthLimit: Number.MAX_SAFE_INTEGER,\n    edgesLimit: Number.MAX_SAFE_INTEGER\n  }\n}\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  decirc(obj, '', 0, [], undefined, 0, options)\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(obj, replacer, spacer)\n    } else {\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction setReplace (replace, val, k, parent) {\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n  if (propertyDescriptor.get !== undefined) {\n    if (propertyDescriptor.configurable) {\n      Object.defineProperty(parent, k, { value: replace })\n      arr.push([parent, k, val, propertyDescriptor])\n    } else {\n      replacerStack.push([val, k, replace])\n    }\n  } else {\n    parent[k] = replace\n    arr.push([parent, k, val])\n  }\n}\n\nfunction decirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, i, stack, val, depth, options)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  var tmp = deterministicDecirc(obj, '', 0, [], undefined, 0, options) || obj\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(tmp, replacer, spacer)\n    } else {\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    // Ensure that we restore the object as it was.\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n    try {\n      if (typeof val.toJSON === 'function') {\n        return\n      }\n    } catch (_) {\n      return\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, i, stack, val, depth, options)\n        tmp[key] = val[key]\n      }\n      if (typeof parent !== 'undefined') {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues (replacer) {\n  replacer =\n    typeof replacer !== 'undefined'\n      ? replacer\n      : function (k, v) {\n        return v\n      }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = part[2]\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}