{"ast":null,"code":"// https://github.com/tc39/proposal-string-pad-start-end\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar toLength = require('../internals/to-length');\n\nvar toString = require('../internals/to-string');\n\nvar $repeat = require('../internals/string-repeat');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar repeat = uncurryThis($repeat);\nvar stringSlice = uncurryThis(''.slice);\nvar ceil = Math.ceil; // `String.prototype.{ padStart, padEnd }` methods implementation\n\nvar createMethod = function (IS_END) {\n  return function ($this, maxLength, fillString) {\n    var S = toString(requireObjectCoercible($this));\n    var intMaxLength = toLength(maxLength);\n    var stringLength = S.length;\n    var fillStr = fillString === undefined ? ' ' : toString(fillString);\n    var fillLen, stringFiller;\n    if (intMaxLength <= stringLength || fillStr == '') return S;\n    fillLen = intMaxLength - stringLength;\n    stringFiller = repeat(fillStr, ceil(fillLen / fillStr.length));\n    if (stringFiller.length > fillLen) stringFiller = stringSlice(stringFiller, 0, fillLen);\n    return IS_END ? S + stringFiller : stringFiller + S;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.padStart` method\n  // https://tc39.es/ecma262/#sec-string.prototype.padstart\n  start: createMethod(false),\n  // `String.prototype.padEnd` method\n  // https://tc39.es/ecma262/#sec-string.prototype.padend\n  end: createMethod(true)\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/core-js-pure/internals/string-pad.js"],"names":["uncurryThis","require","toLength","toString","$repeat","requireObjectCoercible","repeat","stringSlice","slice","ceil","Math","createMethod","IS_END","$this","maxLength","fillString","S","intMaxLength","stringLength","length","fillStr","undefined","fillLen","stringFiller","module","exports","start","end"],"mappings":"AAAA;AACA,IAAIA,WAAW,GAAGC,OAAO,CAAC,oCAAD,CAAzB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,4BAAD,CAArB;;AACA,IAAII,sBAAsB,GAAGJ,OAAO,CAAC,uCAAD,CAApC;;AAEA,IAAIK,MAAM,GAAGN,WAAW,CAACI,OAAD,CAAxB;AACA,IAAIG,WAAW,GAAGP,WAAW,CAAC,GAAGQ,KAAJ,CAA7B;AACA,IAAIC,IAAI,GAAGC,IAAI,CAACD,IAAhB,C,CAEA;;AACA,IAAIE,YAAY,GAAG,UAAUC,MAAV,EAAkB;AACnC,SAAO,UAAUC,KAAV,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAwC;AAC7C,QAAIC,CAAC,GAAGb,QAAQ,CAACE,sBAAsB,CAACQ,KAAD,CAAvB,CAAhB;AACA,QAAII,YAAY,GAAGf,QAAQ,CAACY,SAAD,CAA3B;AACA,QAAII,YAAY,GAAGF,CAAC,CAACG,MAArB;AACA,QAAIC,OAAO,GAAGL,UAAU,KAAKM,SAAf,GAA2B,GAA3B,GAAiClB,QAAQ,CAACY,UAAD,CAAvD;AACA,QAAIO,OAAJ,EAAaC,YAAb;AACA,QAAIN,YAAY,IAAIC,YAAhB,IAAgCE,OAAO,IAAI,EAA/C,EAAmD,OAAOJ,CAAP;AACnDM,IAAAA,OAAO,GAAGL,YAAY,GAAGC,YAAzB;AACAK,IAAAA,YAAY,GAAGjB,MAAM,CAACc,OAAD,EAAUX,IAAI,CAACa,OAAO,GAAGF,OAAO,CAACD,MAAnB,CAAd,CAArB;AACA,QAAII,YAAY,CAACJ,MAAb,GAAsBG,OAA1B,EAAmCC,YAAY,GAAGhB,WAAW,CAACgB,YAAD,EAAe,CAAf,EAAkBD,OAAlB,CAA1B;AACnC,WAAOV,MAAM,GAAGI,CAAC,GAAGO,YAAP,GAAsBA,YAAY,GAAGP,CAAlD;AACD,GAXD;AAYD,CAbD;;AAeAQ,MAAM,CAACC,OAAP,GAAiB;AACf;AACA;AACAC,EAAAA,KAAK,EAAEf,YAAY,CAAC,KAAD,CAHJ;AAIf;AACA;AACAgB,EAAAA,GAAG,EAAEhB,YAAY,CAAC,IAAD;AANF,CAAjB","sourcesContent":["// https://github.com/tc39/proposal-string-pad-start-end\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar $repeat = require('../internals/string-repeat');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar repeat = uncurryThis($repeat);\nvar stringSlice = uncurryThis(''.slice);\nvar ceil = Math.ceil;\n\n// `String.prototype.{ padStart, padEnd }` methods implementation\nvar createMethod = function (IS_END) {\n  return function ($this, maxLength, fillString) {\n    var S = toString(requireObjectCoercible($this));\n    var intMaxLength = toLength(maxLength);\n    var stringLength = S.length;\n    var fillStr = fillString === undefined ? ' ' : toString(fillString);\n    var fillLen, stringFiller;\n    if (intMaxLength <= stringLength || fillStr == '') return S;\n    fillLen = intMaxLength - stringLength;\n    stringFiller = repeat(fillStr, ceil(fillLen / fillStr.length));\n    if (stringFiller.length > fillLen) stringFiller = stringSlice(stringFiller, 0, fillLen);\n    return IS_END ? S + stringFiller : stringFiller + S;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.padStart` method\n  // https://tc39.es/ecma262/#sec-string.prototype.padstart\n  start: createMethod(false),\n  // `String.prototype.padEnd` method\n  // https://tc39.es/ecma262/#sec-string.prototype.padend\n  end: createMethod(true)\n};\n"]},"metadata":{},"sourceType":"script"}