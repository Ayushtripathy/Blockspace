{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar call = require('../internals/function-call');\n\nvar aCallable = require('../internals/a-callable');\n\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\n\nvar perform = require('../internals/perform');\n\nvar iterate = require('../internals/iterate'); // `Promise.allSettled` method\n// https://tc39.es/ecma262/#sec-promise.allsettled\n\n\n$({\n  target: 'Promise',\n  stat: true\n}, {\n  allSettled: function allSettled(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aCallable(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        remaining++;\n        call(promiseResolve, C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = {\n            status: 'fulfilled',\n            value: value\n          };\n          --remaining || resolve(values);\n        }, function (error) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = {\n            status: 'rejected',\n            reason: error\n          };\n          --remaining || resolve(values);\n        });\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/core-js-pure/modules/es.promise.all-settled.js"],"names":["$","require","call","aCallable","newPromiseCapabilityModule","perform","iterate","target","stat","allSettled","iterable","C","capability","f","resolve","reject","result","promiseResolve","values","counter","remaining","promise","index","alreadyCalled","then","value","status","error","reason"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIG,0BAA0B,GAAGH,OAAO,CAAC,qCAAD,CAAxC;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEO,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,IAAI,EAAE;AAA3B,CAAD,EAAoC;AACnCC,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,QAApB,EAA8B;AACxC,QAAIC,CAAC,GAAG,IAAR;AACA,QAAIC,UAAU,GAAGR,0BAA0B,CAACS,CAA3B,CAA6BF,CAA7B,CAAjB;AACA,QAAIG,OAAO,GAAGF,UAAU,CAACE,OAAzB;AACA,QAAIC,MAAM,GAAGH,UAAU,CAACG,MAAxB;AACA,QAAIC,MAAM,GAAGX,OAAO,CAAC,YAAY;AAC/B,UAAIY,cAAc,GAAGd,SAAS,CAACQ,CAAC,CAACG,OAAH,CAA9B;AACA,UAAII,MAAM,GAAG,EAAb;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,SAAS,GAAG,CAAhB;AACAd,MAAAA,OAAO,CAACI,QAAD,EAAW,UAAUW,OAAV,EAAmB;AACnC,YAAIC,KAAK,GAAGH,OAAO,EAAnB;AACA,YAAII,aAAa,GAAG,KAApB;AACAH,QAAAA,SAAS;AACTlB,QAAAA,IAAI,CAACe,cAAD,EAAiBN,CAAjB,EAAoBU,OAApB,CAAJ,CAAiCG,IAAjC,CAAsC,UAAUC,KAAV,EAAiB;AACrD,cAAIF,aAAJ,EAAmB;AACnBA,UAAAA,aAAa,GAAG,IAAhB;AACAL,UAAAA,MAAM,CAACI,KAAD,CAAN,GAAgB;AAAEI,YAAAA,MAAM,EAAE,WAAV;AAAuBD,YAAAA,KAAK,EAAEA;AAA9B,WAAhB;AACA,YAAEL,SAAF,IAAeN,OAAO,CAACI,MAAD,CAAtB;AACD,SALD,EAKG,UAAUS,KAAV,EAAiB;AAClB,cAAIJ,aAAJ,EAAmB;AACnBA,UAAAA,aAAa,GAAG,IAAhB;AACAL,UAAAA,MAAM,CAACI,KAAD,CAAN,GAAgB;AAAEI,YAAAA,MAAM,EAAE,UAAV;AAAsBE,YAAAA,MAAM,EAAED;AAA9B,WAAhB;AACA,YAAEP,SAAF,IAAeN,OAAO,CAACI,MAAD,CAAtB;AACD,SAVD;AAWD,OAfM,CAAP;AAgBA,QAAEE,SAAF,IAAeN,OAAO,CAACI,MAAD,CAAtB;AACD,KAtBmB,CAApB;AAuBA,QAAIF,MAAM,CAACW,KAAX,EAAkBZ,MAAM,CAACC,MAAM,CAACS,KAAR,CAAN;AAClB,WAAOb,UAAU,CAACS,OAAlB;AACD;AA/BkC,CAApC,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar iterate = require('../internals/iterate');\n\n// `Promise.allSettled` method\n// https://tc39.es/ecma262/#sec-promise.allsettled\n$({ target: 'Promise', stat: true }, {\n  allSettled: function allSettled(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aCallable(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        remaining++;\n        call(promiseResolve, C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'fulfilled', value: value };\n          --remaining || resolve(values);\n        }, function (error) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'rejected', reason: error };\n          --remaining || resolve(values);\n        });\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}