{"ast":null,"code":"'use strict';\n\nvar global = require('../internals/global');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar aCallable = require('../internals/a-callable');\n\nvar isObject = require('../internals/is-object');\n\nvar hasOwn = require('../internals/has-own-property');\n\nvar arraySlice = require('../internals/array-slice');\n\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar Function = global.Function;\nvar concat = uncurryThis([].concat);\nvar join = uncurryThis([].join);\nvar factories = {};\n\nvar construct = function (C, argsLength, args) {\n  if (!hasOwn(factories, argsLength)) {\n    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';\n\n    factories[argsLength] = Function('C,a', 'return new C(' + join(list, ',') + ')');\n  }\n\n  return factories[argsLength](C, args);\n}; // `Function.prototype.bind` method implementation\n// https://tc39.es/ecma262/#sec-function.prototype.bind\n\n\nmodule.exports = NATIVE_BIND ? Function.bind : function bind(that\n/* , ...args */\n) {\n  var F = aCallable(this);\n  var Prototype = F.prototype;\n  var partArgs = arraySlice(arguments, 1);\n\n  var boundFunction = function\n    /* args... */\n  bound() {\n    var args = concat(partArgs, arraySlice(arguments));\n    return this instanceof boundFunction ? construct(F, args.length, args) : F.apply(that, args);\n  };\n\n  if (isObject(Prototype)) boundFunction.prototype = Prototype;\n  return boundFunction;\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/core-js-pure/internals/function-bind.js"],"names":["global","require","uncurryThis","aCallable","isObject","hasOwn","arraySlice","NATIVE_BIND","Function","concat","join","factories","construct","C","argsLength","args","list","i","module","exports","bind","that","F","Prototype","prototype","partArgs","arguments","boundFunction","bound","length","apply"],"mappings":"AAAA;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,oCAAD,CAAzB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,+BAAD,CAApB;;AACA,IAAIK,UAAU,GAAGL,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAIM,WAAW,GAAGN,OAAO,CAAC,mCAAD,CAAzB;;AAEA,IAAIO,QAAQ,GAAGR,MAAM,CAACQ,QAAtB;AACA,IAAIC,MAAM,GAAGP,WAAW,CAAC,GAAGO,MAAJ,CAAxB;AACA,IAAIC,IAAI,GAAGR,WAAW,CAAC,GAAGQ,IAAJ,CAAtB;AACA,IAAIC,SAAS,GAAG,EAAhB;;AAEA,IAAIC,SAAS,GAAG,UAAUC,CAAV,EAAaC,UAAb,EAAyBC,IAAzB,EAA+B;AAC7C,MAAI,CAACV,MAAM,CAACM,SAAD,EAAYG,UAAZ,CAAX,EAAoC;AAClC,SAAK,IAAIE,IAAI,GAAG,EAAX,EAAeC,CAAC,GAAG,CAAxB,EAA2BA,CAAC,GAAGH,UAA/B,EAA2CG,CAAC,EAA5C,EAAgDD,IAAI,CAACC,CAAD,CAAJ,GAAU,OAAOA,CAAP,GAAW,GAArB;;AAChDN,IAAAA,SAAS,CAACG,UAAD,CAAT,GAAwBN,QAAQ,CAAC,KAAD,EAAQ,kBAAkBE,IAAI,CAACM,IAAD,EAAO,GAAP,CAAtB,GAAoC,GAA5C,CAAhC;AACD;;AAAC,SAAOL,SAAS,CAACG,UAAD,CAAT,CAAsBD,CAAtB,EAAyBE,IAAzB,CAAP;AACH,CALD,C,CAOA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiBZ,WAAW,GAAGC,QAAQ,CAACY,IAAZ,GAAmB,SAASA,IAAT,CAAcC;AAAK;AAAnB,EAAoC;AACjF,MAAIC,CAAC,GAAGnB,SAAS,CAAC,IAAD,CAAjB;AACA,MAAIoB,SAAS,GAAGD,CAAC,CAACE,SAAlB;AACA,MAAIC,QAAQ,GAAGnB,UAAU,CAACoB,SAAD,EAAY,CAAZ,CAAzB;;AACA,MAAIC,aAAa,GAAG;AAAe;AAANC,EAAAA,KAAT,GAA8B;AAChD,QAAIb,IAAI,GAAGN,MAAM,CAACgB,QAAD,EAAWnB,UAAU,CAACoB,SAAD,CAArB,CAAjB;AACA,WAAO,gBAAgBC,aAAhB,GAAgCf,SAAS,CAACU,CAAD,EAAIP,IAAI,CAACc,MAAT,EAAiBd,IAAjB,CAAzC,GAAkEO,CAAC,CAACQ,KAAF,CAAQT,IAAR,EAAcN,IAAd,CAAzE;AACD,GAHD;;AAIA,MAAIX,QAAQ,CAACmB,SAAD,CAAZ,EAAyBI,aAAa,CAACH,SAAd,GAA0BD,SAA1B;AACzB,SAAOI,aAAP;AACD,CAVD","sourcesContent":["'use strict';\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar isObject = require('../internals/is-object');\nvar hasOwn = require('../internals/has-own-property');\nvar arraySlice = require('../internals/array-slice');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar Function = global.Function;\nvar concat = uncurryThis([].concat);\nvar join = uncurryThis([].join);\nvar factories = {};\n\nvar construct = function (C, argsLength, args) {\n  if (!hasOwn(factories, argsLength)) {\n    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';\n    factories[argsLength] = Function('C,a', 'return new C(' + join(list, ',') + ')');\n  } return factories[argsLength](C, args);\n};\n\n// `Function.prototype.bind` method implementation\n// https://tc39.es/ecma262/#sec-function.prototype.bind\nmodule.exports = NATIVE_BIND ? Function.bind : function bind(that /* , ...args */) {\n  var F = aCallable(this);\n  var Prototype = F.prototype;\n  var partArgs = arraySlice(arguments, 1);\n  var boundFunction = function bound(/* args... */) {\n    var args = concat(partArgs, arraySlice(arguments));\n    return this instanceof boundFunction ? construct(F, args.length, args) : F.apply(that, args);\n  };\n  if (isObject(Prototype)) boundFunction.prototype = Prototype;\n  return boundFunction;\n};\n"]},"metadata":{},"sourceType":"script"}