{"ast":null,"code":"'use strict';\n\nvar call = require('../internals/function-call');\n\nvar aCallable = require('../internals/a-callable');\n\nvar anObject = require('../internals/an-object'); // `Map.prototype.emplace` method\n// https://github.com/thumbsupep/proposal-upsert\n\n\nmodule.exports = function emplace(key, handler) {\n  var map = anObject(this);\n  var get = aCallable(map.get);\n  var has = aCallable(map.has);\n  var set = aCallable(map.set);\n  var value = call(has, map, key) && 'update' in handler ? handler.update(call(get, map, key), key, map) : handler.insert(key, map);\n  call(set, map, key, value);\n  return value;\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/core-js-pure/internals/map-emplace.js"],"names":["call","require","aCallable","anObject","module","exports","emplace","key","handler","map","get","has","set","value","update","insert"],"mappings":"AAAA;;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB,C,CAEA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,OAAtB,EAA+B;AAC9C,MAAIC,GAAG,GAAGN,QAAQ,CAAC,IAAD,CAAlB;AACA,MAAIO,GAAG,GAAGR,SAAS,CAACO,GAAG,CAACC,GAAL,CAAnB;AACA,MAAIC,GAAG,GAAGT,SAAS,CAACO,GAAG,CAACE,GAAL,CAAnB;AACA,MAAIC,GAAG,GAAGV,SAAS,CAACO,GAAG,CAACG,GAAL,CAAnB;AACA,MAAIC,KAAK,GAAIb,IAAI,CAACW,GAAD,EAAMF,GAAN,EAAWF,GAAX,CAAJ,IAAuB,YAAYC,OAApC,GACRA,OAAO,CAACM,MAAR,CAAed,IAAI,CAACU,GAAD,EAAMD,GAAN,EAAWF,GAAX,CAAnB,EAAoCA,GAApC,EAAyCE,GAAzC,CADQ,GAERD,OAAO,CAACO,MAAR,CAAeR,GAAf,EAAoBE,GAApB,CAFJ;AAGAT,EAAAA,IAAI,CAACY,GAAD,EAAMH,GAAN,EAAWF,GAAX,EAAgBM,KAAhB,CAAJ;AACA,SAAOA,KAAP;AACD,CAVD","sourcesContent":["'use strict';\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\n\n// `Map.prototype.emplace` method\n// https://github.com/thumbsupep/proposal-upsert\nmodule.exports = function emplace(key, handler) {\n  var map = anObject(this);\n  var get = aCallable(map.get);\n  var has = aCallable(map.has);\n  var set = aCallable(map.set);\n  var value = (call(has, map, key) && 'update' in handler)\n    ? handler.update(call(get, map, key), key, map)\n    : handler.insert(key, map);\n  call(set, map, key, value);\n  return value;\n};\n"]},"metadata":{},"sourceType":"script"}