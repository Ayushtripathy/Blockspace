{"ast":null,"code":"'use strict';\n\nvar global = require('../internals/global');\n\nvar call = require('../internals/function-call');\n\nvar aCallable = require('../internals/a-callable');\n\nvar isCallable = require('../internals/is-callable');\n\nvar anObject = require('../internals/an-object');\n\nvar TypeError = global.TypeError; // `Map.prototype.upsert` method\n// https://github.com/thumbsupep/proposal-upsert\n\nmodule.exports = function upsert(key, updateFn\n/* , insertFn */\n) {\n  var map = anObject(this);\n  var get = aCallable(map.get);\n  var has = aCallable(map.has);\n  var set = aCallable(map.set);\n  var insertFn = arguments.length > 2 ? arguments[2] : undefined;\n  var value;\n\n  if (!isCallable(updateFn) && !isCallable(insertFn)) {\n    throw TypeError('At least one callback required');\n  }\n\n  if (call(has, map, key)) {\n    value = call(get, map, key);\n\n    if (isCallable(updateFn)) {\n      value = updateFn(value);\n      call(set, map, key, value);\n    }\n  } else if (isCallable(insertFn)) {\n    value = insertFn();\n    call(set, map, key, value);\n  }\n\n  return value;\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/core-js-pure/internals/map-upsert.js"],"names":["global","require","call","aCallable","isCallable","anObject","TypeError","module","exports","upsert","key","updateFn","map","get","has","set","insertFn","arguments","length","undefined","value"],"mappings":"AAAA;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,wBAAD,CAAtB;;AAEA,IAAIK,SAAS,GAAGN,MAAM,CAACM,SAAvB,C,CAEA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC;AAAS;AAA9B,EAAgD;AAC/D,MAAIC,GAAG,GAAGP,QAAQ,CAAC,IAAD,CAAlB;AACA,MAAIQ,GAAG,GAAGV,SAAS,CAACS,GAAG,CAACC,GAAL,CAAnB;AACA,MAAIC,GAAG,GAAGX,SAAS,CAACS,GAAG,CAACE,GAAL,CAAnB;AACA,MAAIC,GAAG,GAAGZ,SAAS,CAACS,GAAG,CAACG,GAAL,CAAnB;AACA,MAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAArD;AACA,MAAIC,KAAJ;;AACA,MAAI,CAAChB,UAAU,CAACO,QAAD,CAAX,IAAyB,CAACP,UAAU,CAACY,QAAD,CAAxC,EAAoD;AAClD,UAAMV,SAAS,CAAC,gCAAD,CAAf;AACD;;AACD,MAAIJ,IAAI,CAACY,GAAD,EAAMF,GAAN,EAAWF,GAAX,CAAR,EAAyB;AACvBU,IAAAA,KAAK,GAAGlB,IAAI,CAACW,GAAD,EAAMD,GAAN,EAAWF,GAAX,CAAZ;;AACA,QAAIN,UAAU,CAACO,QAAD,CAAd,EAA0B;AACxBS,MAAAA,KAAK,GAAGT,QAAQ,CAACS,KAAD,CAAhB;AACAlB,MAAAA,IAAI,CAACa,GAAD,EAAMH,GAAN,EAAWF,GAAX,EAAgBU,KAAhB,CAAJ;AACD;AACF,GAND,MAMO,IAAIhB,UAAU,CAACY,QAAD,CAAd,EAA0B;AAC/BI,IAAAA,KAAK,GAAGJ,QAAQ,EAAhB;AACAd,IAAAA,IAAI,CAACa,GAAD,EAAMH,GAAN,EAAWF,GAAX,EAAgBU,KAAhB,CAAJ;AACD;;AAAC,SAAOA,KAAP;AACH,CApBD","sourcesContent":["'use strict';\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar isCallable = require('../internals/is-callable');\nvar anObject = require('../internals/an-object');\n\nvar TypeError = global.TypeError;\n\n// `Map.prototype.upsert` method\n// https://github.com/thumbsupep/proposal-upsert\nmodule.exports = function upsert(key, updateFn /* , insertFn */) {\n  var map = anObject(this);\n  var get = aCallable(map.get);\n  var has = aCallable(map.has);\n  var set = aCallable(map.set);\n  var insertFn = arguments.length > 2 ? arguments[2] : undefined;\n  var value;\n  if (!isCallable(updateFn) && !isCallable(insertFn)) {\n    throw TypeError('At least one callback required');\n  }\n  if (call(has, map, key)) {\n    value = call(get, map, key);\n    if (isCallable(updateFn)) {\n      value = updateFn(value);\n      call(set, map, key, value);\n    }\n  } else if (isCallable(insertFn)) {\n    value = insertFn();\n    call(set, map, key, value);\n  } return value;\n};\n"]},"metadata":{},"sourceType":"script"}