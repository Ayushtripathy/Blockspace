{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar global = require('../internals/global');\n\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\n\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\n\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar create = require('../internals/object-create');\n\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nvar clearErrorStack = require('../internals/clear-error-stack');\n\nvar installErrorCause = require('../internals/install-error-cause');\n\nvar iterate = require('../internals/iterate');\n\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar Error = global.Error;\nvar push = [].push;\n\nvar $AggregateError = function AggregateError(errors, message\n/* , options */\n) {\n  var options = arguments.length > 2 ? arguments[2] : undefined;\n  var isInstance = isPrototypeOf(AggregateErrorPrototype, this);\n  var that;\n\n  if (setPrototypeOf) {\n    that = setPrototypeOf(new Error(), isInstance ? getPrototypeOf(this) : AggregateErrorPrototype);\n  } else {\n    that = isInstance ? this : create(AggregateErrorPrototype);\n    createNonEnumerableProperty(that, TO_STRING_TAG, 'Error');\n  }\n\n  if (message !== undefined) createNonEnumerableProperty(that, 'message', normalizeStringArgument(message));\n  if (ERROR_STACK_INSTALLABLE) createNonEnumerableProperty(that, 'stack', clearErrorStack(that.stack, 1));\n  installErrorCause(that, options);\n  var errorsArray = [];\n  iterate(errors, push, {\n    that: errorsArray\n  });\n  createNonEnumerableProperty(that, 'errors', errorsArray);\n  return that;\n};\n\nif (setPrototypeOf) setPrototypeOf($AggregateError, Error);else copyConstructorProperties($AggregateError, Error, {\n  name: true\n});\nvar AggregateErrorPrototype = $AggregateError.prototype = create(Error.prototype, {\n  constructor: createPropertyDescriptor(1, $AggregateError),\n  message: createPropertyDescriptor(1, ''),\n  name: createPropertyDescriptor(1, 'AggregateError')\n}); // `AggregateError` constructor\n// https://tc39.es/ecma262/#sec-aggregate-error-constructor\n\n$({\n  global: true\n}, {\n  AggregateError: $AggregateError\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/core-js-pure/modules/es.aggregate-error.js"],"names":["$","require","global","isPrototypeOf","getPrototypeOf","setPrototypeOf","copyConstructorProperties","create","createNonEnumerableProperty","createPropertyDescriptor","clearErrorStack","installErrorCause","iterate","normalizeStringArgument","wellKnownSymbol","ERROR_STACK_INSTALLABLE","TO_STRING_TAG","Error","push","$AggregateError","AggregateError","errors","message","options","arguments","length","undefined","isInstance","AggregateErrorPrototype","that","stack","errorsArray","name","prototype","constructor"],"mappings":"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","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar create = require('../internals/object-create');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar clearErrorStack = require('../internals/clear-error-stack');\nvar installErrorCause = require('../internals/install-error-cause');\nvar iterate = require('../internals/iterate');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar Error = global.Error;\nvar push = [].push;\n\nvar $AggregateError = function AggregateError(errors, message /* , options */) {\n  var options = arguments.length > 2 ? arguments[2] : undefined;\n  var isInstance = isPrototypeOf(AggregateErrorPrototype, this);\n  var that;\n  if (setPrototypeOf) {\n    that = setPrototypeOf(new Error(), isInstance ? getPrototypeOf(this) : AggregateErrorPrototype);\n  } else {\n    that = isInstance ? this : create(AggregateErrorPrototype);\n    createNonEnumerableProperty(that, TO_STRING_TAG, 'Error');\n  }\n  if (message !== undefined) createNonEnumerableProperty(that, 'message', normalizeStringArgument(message));\n  if (ERROR_STACK_INSTALLABLE) createNonEnumerableProperty(that, 'stack', clearErrorStack(that.stack, 1));\n  installErrorCause(that, options);\n  var errorsArray = [];\n  iterate(errors, push, { that: errorsArray });\n  createNonEnumerableProperty(that, 'errors', errorsArray);\n  return that;\n};\n\nif (setPrototypeOf) setPrototypeOf($AggregateError, Error);\nelse copyConstructorProperties($AggregateError, Error, { name: true });\n\nvar AggregateErrorPrototype = $AggregateError.prototype = create(Error.prototype, {\n  constructor: createPropertyDescriptor(1, $AggregateError),\n  message: createPropertyDescriptor(1, ''),\n  name: createPropertyDescriptor(1, 'AggregateError')\n});\n\n// `AggregateError` constructor\n// https://tc39.es/ecma262/#sec-aggregate-error-constructor\n$({ global: true }, {\n  AggregateError: $AggregateError\n});\n"]},"metadata":{},"sourceType":"script"}