{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { SafeEventEmitter } from '@toruslabs/openlogin-jrpc';\nimport { CustomError } from 'ts-custom-error';\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nconst CHAIN_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\"\n};\n\nconst ADAPTER_NAMESPACES = _objectSpread$2(_objectSpread$2({}, CHAIN_NAMESPACES), {}, {\n  MULTICHAIN: \"multichain\"\n});\n\nconst DEFAULT_INFURA_ID = \"776218ac4734478c90191dde8cae483c\";\n\nconst getDefaultNetworkId = chainNamespace => {\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return 1;\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return 1;\n  }\n\n  throw new Error(\"Chain namespace \".concat(chainNamespace, \" is not supported\"));\n};\n\nconst getEvmChainConfig = chainId => {\n  const chainNamespace = CHAIN_NAMESPACES.EIP155;\n\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: \"https://mainnet.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"Ethereum Mainnet\",\n      blockExplorer: \"https://etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 3) {\n    return {\n      chainNamespace,\n      chainId: \"0x3\",\n      rpcTarget: \"https://ropsten.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"ropsten\",\n      blockExplorer: \"https://ropsten.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 4) {\n    return {\n      chainNamespace,\n      chainId: \"0x4\",\n      rpcTarget: \"https://rinkeby.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"rinkeby\",\n      blockExplorer: \"https://rinkeby.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 5) {\n    return {\n      chainNamespace,\n      chainId: \"0x5\",\n      rpcTarget: \"https://goerli.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"goerli\",\n      blockExplorer: \"https://goerli.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 42) {\n    return {\n      chainNamespace,\n      chainId: \"0x2a\",\n      rpcTarget: \"https://kovan.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"kovan\",\n      blockExplorer: \"https://kovan.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 137) {\n    return {\n      chainNamespace,\n      rpcTarget: \"https://polygon-rpc.com\",\n      blockExplorer: \"https://polygonscan.com\",\n      chainId: \"0x89\",\n      displayName: \"Polygon Mainnet\",\n      ticker: \"matic\",\n      tickerName: \"matic\"\n    };\n  } else if (chainId === 80001) {\n    return {\n      chainNamespace,\n      rpcTarget: \"https://rpc-mumbai.maticvigil.com\",\n      blockExplorer: \"https://mumbai-explorer.matic.today\",\n      chainId: \"0x13881\",\n      displayName: \"Polygon Mumbai Testnet\",\n      ticker: \"matic\",\n      tickerName: \"matic\"\n    };\n  } else if (chainId === 56) {\n    return {\n      chainNamespace,\n      rpcTarget: \"https://bsc-dataseed.binance.org\",\n      blockExplorer: \"https://bscscan.com\",\n      chainId: \"0x38\",\n      displayName: \"Binance SmartChain Mainnet\",\n      ticker: \"BNB\",\n      tickerName: \"BNB\"\n    };\n  } else if (chainId === 97) {\n    return {\n      chainNamespace,\n      rpcTarget: \"https://data-seed-prebsc-2-s3.binance.org:8545\",\n      blockExplorer: \"https://testnet.bscscan.com\",\n      chainId: \"0x61\",\n      displayName: \"Binance SmartChain Testnet\",\n      ticker: \"BNB\",\n      tickerName: \"BNB\"\n    };\n  }\n\n  return null;\n};\n\nconst getSolanaChainConfig = chainId => {\n  const chainNamespace = CHAIN_NAMESPACES.SOLANA;\n\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      blockExplorer: \"https://explorer.solana.com\",\n      chainId: \"0x1\",\n      displayName: \"Solana Mainnet\",\n      rpcTarget: \"https://api.mainnet-beta.solana.com\",\n      ticker: \"SOL\",\n      tickerName: \"Solana Token\"\n    };\n  } else if (chainId === 2) {\n    return {\n      rpcTarget: \"https://api.testnet.solana.com\",\n      blockExplorer: \"https://explorer.solana.com?cluster=testnet\",\n      chainId: \"0x2\",\n      chainNamespace,\n      displayName: \"testnet\",\n      ticker: \"SOL\",\n      tickerName: \"solana\"\n    };\n  } else if (chainId === 3) {\n    return {\n      rpcTarget: \"https://api.devnet.solana.com\",\n      blockExplorer: \"https://explorer.solana.com?cluster=devnet\",\n      chainId: \"0x3\",\n      chainNamespace,\n      displayName: \"devnet\",\n      ticker: \"SOL\",\n      tickerName: \"solana\"\n    };\n  }\n\n  return null;\n};\n\nconst getChainConfig = (chainNamespace, chainId) => {\n  const finalChainId = chainId ? typeof chainId === \"number\" ? chainId : parseInt(chainId, 16) : getDefaultNetworkId(chainNamespace);\n\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return getEvmChainConfig(finalChainId);\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return getSolanaChainConfig(finalChainId);\n  }\n\n  return null;\n};\n\nclass Web3AuthError extends CustomError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(message);\n\n    _defineProperty(this, \"code\", void 0);\n\n    _defineProperty(this, \"message\", void 0);\n\n    this.code = code;\n    this.message = message || \"\"; // Set name explicitly as minification can mangle class names\n\n    Object.defineProperty(this, \"name\", {\n      value: \"Web3AuthError\"\n    });\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message\n    };\n  }\n\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n\n}\n\nclass WalletInitializationError extends Web3AuthError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(code, message); // Set name explicitly as minification can mangle class names\n\n    Object.defineProperty(this, \"name\", {\n      value: \"WalletInitializationError\"\n    });\n  }\n\n  static fromCode(code) {\n    let extraMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return new WalletInitializationError(code, \"\".concat(WalletInitializationError.messages[code], \", \").concat(extraMessage));\n  } // Custom methods\n\n\n  static notFound() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5001, extraMessage);\n  }\n\n  static notInstalled() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5002, extraMessage);\n  }\n\n  static notReady() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5003, extraMessage);\n  }\n\n  static windowBlocked() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5004, extraMessage);\n  }\n\n  static windowClosed() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5005, extraMessage);\n  }\n\n  static incompatibleChainNameSpace() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5006, extraMessage);\n  }\n\n  static duplicateAdapterError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5007, extraMessage);\n  }\n\n  static invalidProviderConfigError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5008, extraMessage);\n  }\n\n  static providerNotReadyError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5009, extraMessage);\n  }\n\n  static rpcConnectionError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5010, extraMessage);\n  }\n\n  static invalidParams() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5011, extraMessage);\n  }\n\n  static invalidNetwork() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5013, extraMessage);\n  }\n\n}\n/**\n * wallet login errors\n */\n\n\n_defineProperty(WalletInitializationError, \"messages\", {\n  5000: \"Custom\",\n  5001: \"Wallet is not found\",\n  5002: \"Wallet is not installed\",\n  5003: \"Wallet is not ready yet\",\n  5004: \"Wallet window is blocked\",\n  5005: \"Wallet window has been closed by the user\",\n  5006: \"Incompatible chain namespace provided\",\n  5007: \"Adapter has already been included\",\n  5008: \"Invalid provider Config\",\n  5009: \"Provider is not ready yet\",\n  5010: \"Failed to connect with rpc url\",\n  5011: \"Invalid params passed in\",\n  5013: \"Invalid network provided\"\n});\n\nclass WalletLoginError extends Web3AuthError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(code, message); // Set name explicitly as minification can mangle class names\n\n    Object.defineProperty(this, \"name\", {\n      value: \"WalletLoginError\"\n    });\n  }\n\n  static fromCode(code) {\n    let extraMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return new WalletLoginError(code, \"\".concat(WalletLoginError.messages[code]).concat(extraMessage));\n  }\n\n  static connectionError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5111, extraMessage);\n  }\n\n  static disconnectionError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5112, extraMessage);\n  }\n\n  static notConnectedError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5113, extraMessage);\n  }\n\n  static popupClosed() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5114, extraMessage);\n  }\n\n}\n\n_defineProperty(WalletLoginError, \"messages\", {\n  5000: \"Custom\",\n  5111: \"Failed to connect with wallet\",\n  5112: \"Failed to disconnect from wallet\",\n  5113: \"Wallet is not connected\",\n  5114: \"Wallet popup has been closed by the user\"\n});\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nconst MULTI_CHAIN_ADAPTERS = {\n  OPENLOGIN: \"openlogin\",\n  WALLET_CONNECT_V1: \"wallet-connect-v1\",\n  WALLET_CONNECT_V2: \"wallet-connect-v2\"\n};\n\nconst SOLANA_ADAPTERS = _objectSpread$1({\n  TORUS_SOLANA: \"torus-solana\",\n  PHANTOM: \"phantom\"\n}, MULTI_CHAIN_ADAPTERS);\n\nconst EVM_ADAPTERS = _objectSpread$1({\n  TORUS_EVM: \"torus-evm\",\n  METAMASK: \"metamask\"\n}, MULTI_CHAIN_ADAPTERS);\n\nconst WALLET_ADAPTERS = _objectSpread$1(_objectSpread$1({}, EVM_ADAPTERS), SOLANA_ADAPTERS);\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nconst ADAPTER_CATEGORY = {\n  EXTERNAL: \"external\",\n  IN_APP: \"in_app\"\n};\nconst ADAPTER_STATUS = {\n  NOT_READY: \"not_ready\",\n  READY: \"ready\",\n  CONNECTING: \"connecting\",\n  CONNECTED: \"connected\",\n  DISCONNECTED: \"disconnected\",\n  ERRORED: \"errored\"\n};\n\nconst ADAPTER_EVENTS = _objectSpread(_objectSpread({}, ADAPTER_STATUS), {}, {\n  ADAPTER_DATA_UPDATED: \"adapter_data_updated\"\n});\n\nclass BaseAdapter extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"adapterData\", {});\n\n    _defineProperty(this, \"chainConfig\", null);\n  }\n\n  get chainConfigProxy() {\n    return this.chainConfig ? _objectSpread({}, this.chainConfig) : null;\n  }\n\n  setChainConfig(customChainConfig) {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (!customChainConfig.chainNamespace) throw WalletInitializationError.notReady(\"ChainNamespace is required while setting chainConfig\");\n    const defaultChainConfig = getChainConfig(customChainConfig.chainNamespace, customChainConfig.chainId);\n    this.chainConfig = _objectSpread(_objectSpread({}, defaultChainConfig), customChainConfig);\n  }\n\n  setAdapterSettings(_) {}\n\n  checkConnectionRequirements() {\n    // we reconnect without killing existing wallet connect session on calling connect again.\n    if (this.name === WALLET_ADAPTERS.WALLET_CONNECT_V1 && this.status === ADAPTER_STATUS.CONNECTING) return;else if (this.status === ADAPTER_STATUS.CONNECTING) throw WalletInitializationError.notReady(\"Already connecting\");\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletLoginError.connectionError(\"Already connected\");\n    if (this.status !== ADAPTER_STATUS.READY) throw WalletLoginError.connectionError(\"Wallet adapter is not ready yet\");\n  }\n\n  checkInitializationRequirements() {\n    if (this.status === ADAPTER_STATUS.NOT_READY) return;\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletInitializationError.notReady(\"Already connected\");\n    if (this.status === ADAPTER_STATUS.READY) throw WalletInitializationError.notReady(\"Adapter is already initialized\");\n  }\n\n  updateAdapterData(data) {\n    this.adapterData = data;\n    this.emit(ADAPTER_EVENTS.ADAPTER_DATA_UPDATED, {\n      adapterName: this.name,\n      data\n    });\n  }\n\n}\n\nconst PROVIDER_EVENTS = {\n  INITIALIZED: \"initialized\",\n  ERRORED: \"errored\"\n};\n\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    const _error = error;\n    return !!(_error && ( // everything except Firefox\n    _error.code === 22 || // Firefox\n    _error.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    _error.name === \"QuotaExceededError\" || // Firefox\n    _error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0);\n  }\n}\n\nconst isHexStrict = hex => {\n  return (typeof hex === \"string\" || typeof hex === \"number\") && /^(-)?0x[0-9a-f]*$/i.test(hex);\n};\n\nexport { ADAPTER_CATEGORY, ADAPTER_EVENTS, ADAPTER_NAMESPACES, ADAPTER_STATUS, BaseAdapter, CHAIN_NAMESPACES, DEFAULT_INFURA_ID, EVM_ADAPTERS, MULTI_CHAIN_ADAPTERS, PROVIDER_EVENTS, SOLANA_ADAPTERS, WALLET_ADAPTERS, WalletInitializationError, WalletLoginError, Web3AuthError, getChainConfig, getEvmChainConfig, getSolanaChainConfig, isHexStrict, storageAvailable };","map":{"version":3,"sources":["../src/chain/IChainInterface.ts","../src/chain/config.ts","../src/errors/index.ts","../src/wallet/index.ts","../src/adapter/IAdapter.ts","../src/provider/IProvider.ts","../src/utils.ts"],"names":["CHAIN_NAMESPACES","EIP155","SOLANA","ADAPTER_NAMESPACES","MULTICHAIN","DEFAULT_INFURA_ID","getDefaultNetworkId","chainNamespace","getEvmChainConfig","chainId","rpcTarget","displayName","blockExplorer","ticker","tickerName","getSolanaChainConfig","getChainConfig","finalChainId","parseInt","Web3AuthError","CustomError","constructor","code","message","Object","value","toJSON","name","toString","JSON","WalletInitializationError","fromCode","extraMessage","notFound","notInstalled","notReady","windowBlocked","windowClosed","incompatibleChainNameSpace","duplicateAdapterError","invalidProviderConfigError","providerNotReadyError","rpcConnectionError","invalidParams","invalidNetwork","WalletLoginError","connectionError","disconnectionError","notConnectedError","popupClosed","MULTI_CHAIN_ADAPTERS","OPENLOGIN","WALLET_CONNECT_V1","WALLET_CONNECT_V2","SOLANA_ADAPTERS","TORUS_SOLANA","PHANTOM","EVM_ADAPTERS","TORUS_EVM","METAMASK","WALLET_ADAPTERS","ADAPTER_CATEGORY","EXTERNAL","IN_APP","ADAPTER_STATUS","NOT_READY","READY","CONNECTING","CONNECTED","DISCONNECTED","ERRORED","ADAPTER_EVENTS","ADAPTER_DATA_UPDATED","BaseAdapter","SafeEventEmitter","chainConfigProxy","setChainConfig","customChainConfig","defaultChainConfig","setAdapterSettings","checkConnectionRequirements","checkInitializationRequirements","updateAdapterData","adapterName","data","PROVIDER_EVENTS","INITIALIZED","storageAvailable","type","storageExists","storageLength","storage","window","x","_error","isHexStrict","hex"],"mappings":"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","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { SafeEventEmitter } from '@toruslabs/openlogin-jrpc';\nimport { CustomError } from 'ts-custom-error';\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nconst CHAIN_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\"\n};\nconst ADAPTER_NAMESPACES = _objectSpread$2(_objectSpread$2({}, CHAIN_NAMESPACES), {}, {\n  MULTICHAIN: \"multichain\"\n});\n\nconst DEFAULT_INFURA_ID = \"776218ac4734478c90191dde8cae483c\";\n\nconst getDefaultNetworkId = chainNamespace => {\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return 1;\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return 1;\n  }\n\n  throw new Error(\"Chain namespace \".concat(chainNamespace, \" is not supported\"));\n};\n\nconst getEvmChainConfig = chainId => {\n  const chainNamespace = CHAIN_NAMESPACES.EIP155;\n\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: \"https://mainnet.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"Ethereum Mainnet\",\n      blockExplorer: \"https://etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 3) {\n    return {\n      chainNamespace,\n      chainId: \"0x3\",\n      rpcTarget: \"https://ropsten.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"ropsten\",\n      blockExplorer: \"https://ropsten.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 4) {\n    return {\n      chainNamespace,\n      chainId: \"0x4\",\n      rpcTarget: \"https://rinkeby.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"rinkeby\",\n      blockExplorer: \"https://rinkeby.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 5) {\n    return {\n      chainNamespace,\n      chainId: \"0x5\",\n      rpcTarget: \"https://goerli.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"goerli\",\n      blockExplorer: \"https://goerli.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 42) {\n    return {\n      chainNamespace,\n      chainId: \"0x2a\",\n      rpcTarget: \"https://kovan.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"kovan\",\n      blockExplorer: \"https://kovan.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 137) {\n    return {\n      chainNamespace,\n      rpcTarget: \"https://polygon-rpc.com\",\n      blockExplorer: \"https://polygonscan.com\",\n      chainId: \"0x89\",\n      displayName: \"Polygon Mainnet\",\n      ticker: \"matic\",\n      tickerName: \"matic\"\n    };\n  } else if (chainId === 80001) {\n    return {\n      chainNamespace,\n      rpcTarget: \"https://rpc-mumbai.maticvigil.com\",\n      blockExplorer: \"https://mumbai-explorer.matic.today\",\n      chainId: \"0x13881\",\n      displayName: \"Polygon Mumbai Testnet\",\n      ticker: \"matic\",\n      tickerName: \"matic\"\n    };\n  } else if (chainId === 56) {\n    return {\n      chainNamespace,\n      rpcTarget: \"https://bsc-dataseed.binance.org\",\n      blockExplorer: \"https://bscscan.com\",\n      chainId: \"0x38\",\n      displayName: \"Binance SmartChain Mainnet\",\n      ticker: \"BNB\",\n      tickerName: \"BNB\"\n    };\n  } else if (chainId === 97) {\n    return {\n      chainNamespace,\n      rpcTarget: \"https://data-seed-prebsc-2-s3.binance.org:8545\",\n      blockExplorer: \"https://testnet.bscscan.com\",\n      chainId: \"0x61\",\n      displayName: \"Binance SmartChain Testnet\",\n      ticker: \"BNB\",\n      tickerName: \"BNB\"\n    };\n  }\n\n  return null;\n};\nconst getSolanaChainConfig = chainId => {\n  const chainNamespace = CHAIN_NAMESPACES.SOLANA;\n\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      blockExplorer: \"https://explorer.solana.com\",\n      chainId: \"0x1\",\n      displayName: \"Solana Mainnet\",\n      rpcTarget: \"https://api.mainnet-beta.solana.com\",\n      ticker: \"SOL\",\n      tickerName: \"Solana Token\"\n    };\n  } else if (chainId === 2) {\n    return {\n      rpcTarget: \"https://api.testnet.solana.com\",\n      blockExplorer: \"https://explorer.solana.com?cluster=testnet\",\n      chainId: \"0x2\",\n      chainNamespace,\n      displayName: \"testnet\",\n      ticker: \"SOL\",\n      tickerName: \"solana\"\n    };\n  } else if (chainId === 3) {\n    return {\n      rpcTarget: \"https://api.devnet.solana.com\",\n      blockExplorer: \"https://explorer.solana.com?cluster=devnet\",\n      chainId: \"0x3\",\n      chainNamespace,\n      displayName: \"devnet\",\n      ticker: \"SOL\",\n      tickerName: \"solana\"\n    };\n  }\n\n  return null;\n};\nconst getChainConfig = (chainNamespace, chainId) => {\n  const finalChainId = chainId ? typeof chainId === \"number\" ? chainId : parseInt(chainId, 16) : getDefaultNetworkId(chainNamespace);\n\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return getEvmChainConfig(finalChainId);\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return getSolanaChainConfig(finalChainId);\n  }\n\n  return null;\n};\n\nclass Web3AuthError extends CustomError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(message);\n\n    _defineProperty(this, \"code\", void 0);\n\n    _defineProperty(this, \"message\", void 0);\n\n    this.code = code;\n    this.message = message || \"\"; // Set name explicitly as minification can mangle class names\n\n    Object.defineProperty(this, \"name\", {\n      value: \"Web3AuthError\"\n    });\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message\n    };\n  }\n\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n\n}\nclass WalletInitializationError extends Web3AuthError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(code, message); // Set name explicitly as minification can mangle class names\n\n    Object.defineProperty(this, \"name\", {\n      value: \"WalletInitializationError\"\n    });\n  }\n\n  static fromCode(code) {\n    let extraMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return new WalletInitializationError(code, \"\".concat(WalletInitializationError.messages[code], \", \").concat(extraMessage));\n  } // Custom methods\n\n\n  static notFound() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5001, extraMessage);\n  }\n\n  static notInstalled() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5002, extraMessage);\n  }\n\n  static notReady() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5003, extraMessage);\n  }\n\n  static windowBlocked() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5004, extraMessage);\n  }\n\n  static windowClosed() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5005, extraMessage);\n  }\n\n  static incompatibleChainNameSpace() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5006, extraMessage);\n  }\n\n  static duplicateAdapterError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5007, extraMessage);\n  }\n\n  static invalidProviderConfigError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5008, extraMessage);\n  }\n\n  static providerNotReadyError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5009, extraMessage);\n  }\n\n  static rpcConnectionError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5010, extraMessage);\n  }\n\n  static invalidParams() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5011, extraMessage);\n  }\n\n  static invalidNetwork() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5013, extraMessage);\n  }\n\n}\n/**\n * wallet login errors\n */\n\n_defineProperty(WalletInitializationError, \"messages\", {\n  5000: \"Custom\",\n  5001: \"Wallet is not found\",\n  5002: \"Wallet is not installed\",\n  5003: \"Wallet is not ready yet\",\n  5004: \"Wallet window is blocked\",\n  5005: \"Wallet window has been closed by the user\",\n  5006: \"Incompatible chain namespace provided\",\n  5007: \"Adapter has already been included\",\n  5008: \"Invalid provider Config\",\n  5009: \"Provider is not ready yet\",\n  5010: \"Failed to connect with rpc url\",\n  5011: \"Invalid params passed in\",\n  5013: \"Invalid network provided\"\n});\n\nclass WalletLoginError extends Web3AuthError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(code, message); // Set name explicitly as minification can mangle class names\n\n    Object.defineProperty(this, \"name\", {\n      value: \"WalletLoginError\"\n    });\n  }\n\n  static fromCode(code) {\n    let extraMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return new WalletLoginError(code, \"\".concat(WalletLoginError.messages[code]).concat(extraMessage));\n  }\n\n  static connectionError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5111, extraMessage);\n  }\n\n  static disconnectionError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5112, extraMessage);\n  }\n\n  static notConnectedError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5113, extraMessage);\n  }\n\n  static popupClosed() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5114, extraMessage);\n  }\n\n}\n\n_defineProperty(WalletLoginError, \"messages\", {\n  5000: \"Custom\",\n  5111: \"Failed to connect with wallet\",\n  5112: \"Failed to disconnect from wallet\",\n  5113: \"Wallet is not connected\",\n  5114: \"Wallet popup has been closed by the user\"\n});\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nconst MULTI_CHAIN_ADAPTERS = {\n  OPENLOGIN: \"openlogin\",\n  WALLET_CONNECT_V1: \"wallet-connect-v1\",\n  WALLET_CONNECT_V2: \"wallet-connect-v2\"\n};\nconst SOLANA_ADAPTERS = _objectSpread$1({\n  TORUS_SOLANA: \"torus-solana\",\n  PHANTOM: \"phantom\"\n}, MULTI_CHAIN_ADAPTERS);\nconst EVM_ADAPTERS = _objectSpread$1({\n  TORUS_EVM: \"torus-evm\",\n  METAMASK: \"metamask\"\n}, MULTI_CHAIN_ADAPTERS);\nconst WALLET_ADAPTERS = _objectSpread$1(_objectSpread$1({}, EVM_ADAPTERS), SOLANA_ADAPTERS);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst ADAPTER_CATEGORY = {\n  EXTERNAL: \"external\",\n  IN_APP: \"in_app\"\n};\nconst ADAPTER_STATUS = {\n  NOT_READY: \"not_ready\",\n  READY: \"ready\",\n  CONNECTING: \"connecting\",\n  CONNECTED: \"connected\",\n  DISCONNECTED: \"disconnected\",\n  ERRORED: \"errored\"\n};\nconst ADAPTER_EVENTS = _objectSpread(_objectSpread({}, ADAPTER_STATUS), {}, {\n  ADAPTER_DATA_UPDATED: \"adapter_data_updated\"\n});\nclass BaseAdapter extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"adapterData\", {});\n\n    _defineProperty(this, \"chainConfig\", null);\n  }\n\n  get chainConfigProxy() {\n    return this.chainConfig ? _objectSpread({}, this.chainConfig) : null;\n  }\n\n  setChainConfig(customChainConfig) {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (!customChainConfig.chainNamespace) throw WalletInitializationError.notReady(\"ChainNamespace is required while setting chainConfig\");\n    const defaultChainConfig = getChainConfig(customChainConfig.chainNamespace, customChainConfig.chainId);\n    this.chainConfig = _objectSpread(_objectSpread({}, defaultChainConfig), customChainConfig);\n  }\n\n  setAdapterSettings(_) {}\n\n  checkConnectionRequirements() {\n    // we reconnect without killing existing wallet connect session on calling connect again.\n    if (this.name === WALLET_ADAPTERS.WALLET_CONNECT_V1 && this.status === ADAPTER_STATUS.CONNECTING) return;else if (this.status === ADAPTER_STATUS.CONNECTING) throw WalletInitializationError.notReady(\"Already connecting\");\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletLoginError.connectionError(\"Already connected\");\n    if (this.status !== ADAPTER_STATUS.READY) throw WalletLoginError.connectionError(\"Wallet adapter is not ready yet\");\n  }\n\n  checkInitializationRequirements() {\n    if (this.status === ADAPTER_STATUS.NOT_READY) return;\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletInitializationError.notReady(\"Already connected\");\n    if (this.status === ADAPTER_STATUS.READY) throw WalletInitializationError.notReady(\"Adapter is already initialized\");\n  }\n\n  updateAdapterData(data) {\n    this.adapterData = data;\n    this.emit(ADAPTER_EVENTS.ADAPTER_DATA_UPDATED, {\n      adapterName: this.name,\n      data\n    });\n  }\n\n}\n\nconst PROVIDER_EVENTS = {\n  INITIALIZED: \"initialized\",\n  ERRORED: \"errored\"\n};\n\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    const _error = error;\n    return !!(_error && ( // everything except Firefox\n    _error.code === 22 || // Firefox\n    _error.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    _error.name === \"QuotaExceededError\" || // Firefox\n    _error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0);\n  }\n}\nconst isHexStrict = hex => {\n  return (typeof hex === \"string\" || typeof hex === \"number\") && /^(-)?0x[0-9a-f]*$/i.test(hex);\n};\n\nexport { ADAPTER_CATEGORY, ADAPTER_EVENTS, ADAPTER_NAMESPACES, ADAPTER_STATUS, BaseAdapter, CHAIN_NAMESPACES, DEFAULT_INFURA_ID, EVM_ADAPTERS, MULTI_CHAIN_ADAPTERS, PROVIDER_EVENTS, SOLANA_ADAPTERS, WALLET_ADAPTERS, WalletInitializationError, WalletLoginError, Web3AuthError, getChainConfig, getEvmChainConfig, getSolanaChainConfig, isHexStrict, storageAvailable };\n//# sourceMappingURL=base.esm.js.map\n"]},"metadata":{},"sourceType":"module"}