{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _isInteger = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/number/is-integer\"));\n\nvar supportedTypes = ['native', 'erc20', 'erc721', 'erc1155'];\nvar ERC1155TransferABI = [{\n  inputs: [{\n    internalType: 'address',\n    name: 'from',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'to',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'id',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: 'value',\n    type: 'uint256'\n  }, {\n    internalType: 'bytes',\n    name: 'data',\n    type: 'bytes'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  name: 'safeTransferFrom',\n  type: 'function',\n  constant: false,\n  payable: false\n}, {\n  inputs: [{\n    internalType: 'address',\n    name: 'from',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'to',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'id',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: 'value',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  name: 'transferFrom',\n  type: 'function',\n  constant: false,\n  payable: false\n}];\nvar ERC721TransferABI = [{\n  inputs: [{\n    internalType: 'address',\n    name: 'from',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'to',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  name: 'safeTransferFrom',\n  type: 'function',\n  constant: false,\n  payable: false\n}, {\n  inputs: [{\n    internalType: 'address',\n    name: 'from',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'to',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  name: 'transferFrom',\n  type: 'function',\n  constant: false,\n  payable: false\n}];\nvar ERC20TransferABI = [{\n  constant: false,\n  inputs: [{\n    name: '_to',\n    type: 'address'\n  }, {\n    name: '_value',\n    type: 'uint256'\n  }],\n  name: 'transfer',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '_owner',\n    type: 'address'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    name: 'balance',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}];\nvar tokenParams = {\n  native: {\n    receiver: '',\n    amount: ''\n  },\n  erc20: {\n    contractAddress: '',\n    receiver: '',\n    amount: ''\n  },\n  erc721: {\n    contractAddress: '',\n    receiver: '',\n    tokenId: ''\n  },\n  erc1155: {\n    contractAddress: '',\n    receiver: '',\n    tokenId: '',\n    amount: ''\n  }\n};\n\nvar isNotEmpty = function (value) {\n  return typeof value !== 'undefined' && value ? true : false;\n};\n\nvar validateInput = function (type, payload) {\n  var errors = [];\n  var parameters = tokenParams[type];\n\n  for (var _i = 0, _Object$keys = (0, _keys.default)(parameters); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n\n    if (!isNotEmpty(payload[key])) {\n      errors.push(\"\".concat(key, \" is required\"));\n    }\n  }\n\n  if (errors.length > 0) {\n    throw errors;\n  }\n};\n\nvar isSupportedType = function (type) {\n  if ((0, _indexOf.default)(supportedTypes).call(supportedTypes, type) === -1) throw 'Unsupported type';\n  return true;\n};\n\nvar isUint256 = function (tokenId) {\n  if (!(0, _isInteger.default)(+tokenId) || +tokenId < 0) throw new Error('Invalid token Id');\n  return true;\n};\n\nmodule.exports = {\n  abi: {\n    erc1155: ERC1155TransferABI,\n    erc721: ERC721TransferABI,\n    erc20: ERC20TransferABI\n  },\n  validateInput: validateInput,\n  isSupportedType: isSupportedType,\n  isNotEmpty: isNotEmpty,\n  isUint256: isUint256\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/moralis/lib/browser/TransferUtils.js"],"names":["_interopRequireDefault","require","_keys","_indexOf","_isInteger","supportedTypes","ERC1155TransferABI","inputs","internalType","name","type","outputs","constant","payable","ERC721TransferABI","ERC20TransferABI","stateMutability","tokenParams","native","receiver","amount","erc20","contractAddress","erc721","tokenId","erc1155","isNotEmpty","value","validateInput","payload","errors","parameters","_i","_Object$keys","default","length","key","push","concat","isSupportedType","call","isUint256","Error","module","exports","abi"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _isInteger = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/number/is-integer\"));\n\nvar supportedTypes = ['native', 'erc20', 'erc721', 'erc1155'];\nvar ERC1155TransferABI = [{\n  inputs: [{\n    internalType: 'address',\n    name: 'from',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'to',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'id',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: 'value',\n    type: 'uint256'\n  }, {\n    internalType: 'bytes',\n    name: 'data',\n    type: 'bytes'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  name: 'safeTransferFrom',\n  type: 'function',\n  constant: false,\n  payable: false\n}, {\n  inputs: [{\n    internalType: 'address',\n    name: 'from',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'to',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'id',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: 'value',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  name: 'transferFrom',\n  type: 'function',\n  constant: false,\n  payable: false\n}];\nvar ERC721TransferABI = [{\n  inputs: [{\n    internalType: 'address',\n    name: 'from',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'to',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  name: 'safeTransferFrom',\n  type: 'function',\n  constant: false,\n  payable: false\n}, {\n  inputs: [{\n    internalType: 'address',\n    name: 'from',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'to',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  name: 'transferFrom',\n  type: 'function',\n  constant: false,\n  payable: false\n}];\nvar ERC20TransferABI = [{\n  constant: false,\n  inputs: [{\n    name: '_to',\n    type: 'address'\n  }, {\n    name: '_value',\n    type: 'uint256'\n  }],\n  name: 'transfer',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '_owner',\n    type: 'address'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    name: 'balance',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}];\nvar tokenParams = {\n  native: {\n    receiver: '',\n    amount: ''\n  },\n  erc20: {\n    contractAddress: '',\n    receiver: '',\n    amount: ''\n  },\n  erc721: {\n    contractAddress: '',\n    receiver: '',\n    tokenId: ''\n  },\n  erc1155: {\n    contractAddress: '',\n    receiver: '',\n    tokenId: '',\n    amount: ''\n  }\n};\n\nvar isNotEmpty = function (value) {\n  return typeof value !== 'undefined' && value ? true : false;\n};\n\nvar validateInput = function (type, payload) {\n  var errors = [];\n  var parameters = tokenParams[type];\n\n  for (var _i = 0, _Object$keys = (0, _keys.default)(parameters); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n\n    if (!isNotEmpty(payload[key])) {\n      errors.push(\"\".concat(key, \" is required\"));\n    }\n  }\n\n  if (errors.length > 0) {\n    throw errors;\n  }\n};\n\nvar isSupportedType = function (type) {\n  if ((0, _indexOf.default)(supportedTypes).call(supportedTypes, type) === -1) throw 'Unsupported type';\n  return true;\n};\n\nvar isUint256 = function (tokenId) {\n  if (!(0, _isInteger.default)(+tokenId) || +tokenId < 0) throw new Error('Invalid token Id');\n  return true;\n};\n\nmodule.exports = {\n  abi: {\n    erc1155: ERC1155TransferABI,\n    erc721: ERC721TransferABI,\n    erc20: ERC20TransferABI\n  },\n  validateInput: validateInput,\n  isSupportedType: isSupportedType,\n  isNotEmpty: isNotEmpty,\n  isUint256: isUint256\n};"]},"metadata":{},"sourceType":"script"}