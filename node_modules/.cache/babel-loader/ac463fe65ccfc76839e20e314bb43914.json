{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNode = exports.PROMISE_RESOLVED_VOID = exports.PROMISE_RESOLVED_TRUE = exports.PROMISE_RESOLVED_FALSE = void 0;\nexports.isPromise = isPromise;\nexports.microSeconds = microSeconds;\nexports.randomInt = randomInt;\nexports.randomToken = randomToken;\nexports.sleep = sleep;\n/**\n * returns true if the given object is a promise\n */\n\nfunction isPromise(obj) {\n  if (obj && typeof obj.then === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvar PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexports.PROMISE_RESOLVED_FALSE = PROMISE_RESOLVED_FALSE;\nvar PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexports.PROMISE_RESOLVED_TRUE = PROMISE_RESOLVED_TRUE;\nvar PROMISE_RESOLVED_VOID = Promise.resolve();\nexports.PROMISE_RESOLVED_VOID = PROMISE_RESOLVED_VOID;\n\nfunction sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n/**\n * https://stackoverflow.com/a/8084248\n */\n\n\nfunction randomToken() {\n  return Math.random().toString(36).substring(2);\n}\n\nvar lastMs = 0;\nvar additional = 0;\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\n\nfunction microSeconds() {\n  var ms = new Date().getTime();\n\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}\n/**\n * copied from the 'detect-node' npm module\n * We cannot use the module directly because it causes problems with rollup\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\n\n\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nexports.isNode = isNode;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/broadcast-channel/dist/lib/util.js"],"names":["Object","defineProperty","exports","value","isNode","PROMISE_RESOLVED_VOID","PROMISE_RESOLVED_TRUE","PROMISE_RESOLVED_FALSE","isPromise","microSeconds","randomInt","randomToken","sleep","obj","then","Promise","resolve","time","resolveWith","res","setTimeout","min","max","Math","floor","random","toString","substring","lastMs","additional","ms","Date","getTime","prototype","call","process"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACG,qBAAR,GAAgCH,OAAO,CAACI,qBAAR,GAAgCJ,OAAO,CAACK,sBAAR,GAAiC,KAAK,CAAvH;AACAL,OAAO,CAACM,SAAR,GAAoBA,SAApB;AACAN,OAAO,CAACO,YAAR,GAAuBA,YAAvB;AACAP,OAAO,CAACQ,SAAR,GAAoBA,SAApB;AACAR,OAAO,CAACS,WAAR,GAAsBA,WAAtB;AACAT,OAAO,CAACU,KAAR,GAAgBA,KAAhB;AAEA;AACA;AACA;;AACA,SAASJ,SAAT,CAAmBK,GAAnB,EAAwB;AACtB,MAAIA,GAAG,IAAI,OAAOA,GAAG,CAACC,IAAX,KAAoB,UAA/B,EAA2C;AACzC,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF;;AAED,IAAIP,sBAAsB,GAAGQ,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAA7B;AACAd,OAAO,CAACK,sBAAR,GAAiCA,sBAAjC;AACA,IAAID,qBAAqB,GAAGS,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAA5B;AACAd,OAAO,CAACI,qBAAR,GAAgCA,qBAAhC;AACA,IAAID,qBAAqB,GAAGU,OAAO,CAACC,OAAR,EAA5B;AACAd,OAAO,CAACG,qBAAR,GAAgCA,qBAAhC;;AAEA,SAASO,KAAT,CAAeK,IAAf,EAAqBC,WAArB,EAAkC;AAChC,MAAI,CAACD,IAAL,EAAWA,IAAI,GAAG,CAAP;AACX,SAAO,IAAIF,OAAJ,CAAY,UAAUI,GAAV,EAAe;AAChC,WAAOC,UAAU,CAAC,YAAY;AAC5B,aAAOD,GAAG,CAACD,WAAD,CAAV;AACD,KAFgB,EAEdD,IAFc,CAAjB;AAGD,GAJM,CAAP;AAKD;;AAED,SAASP,SAAT,CAAmBW,GAAnB,EAAwBC,GAAxB,EAA6B;AAC3B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD;AACD;AACA;AACA;;;AAGA,SAASV,WAAT,GAAuB;AACrB,SAAOY,IAAI,CAACE,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAAP;AACD;;AAED,IAAIC,MAAM,GAAG,CAAb;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASpB,YAAT,GAAwB;AACtB,MAAIqB,EAAE,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAT;;AAEA,MAAIF,EAAE,KAAKF,MAAX,EAAmB;AACjBC,IAAAA,UAAU;AACV,WAAOC,EAAE,GAAG,IAAL,GAAYD,UAAnB;AACD,GAHD,MAGO;AACLD,IAAAA,MAAM,GAAGE,EAAT;AACAD,IAAAA,UAAU,GAAG,CAAb;AACA,WAAOC,EAAE,GAAG,IAAZ;AACD;AACF;AACD;AACA;AACA;AACA;AACA;;;AAGA,IAAI1B,MAAM,GAAGJ,MAAM,CAACiC,SAAP,CAAiBP,QAAjB,CAA0BQ,IAA1B,CAA+B,OAAOC,OAAP,KAAmB,WAAnB,GAAiCA,OAAjC,GAA2C,CAA1E,MAAiF,kBAA9F;AACAjC,OAAO,CAACE,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNode = exports.PROMISE_RESOLVED_VOID = exports.PROMISE_RESOLVED_TRUE = exports.PROMISE_RESOLVED_FALSE = void 0;\nexports.isPromise = isPromise;\nexports.microSeconds = microSeconds;\nexports.randomInt = randomInt;\nexports.randomToken = randomToken;\nexports.sleep = sleep;\n\n/**\n * returns true if the given object is a promise\n */\nfunction isPromise(obj) {\n  if (obj && typeof obj.then === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvar PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexports.PROMISE_RESOLVED_FALSE = PROMISE_RESOLVED_FALSE;\nvar PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexports.PROMISE_RESOLVED_TRUE = PROMISE_RESOLVED_TRUE;\nvar PROMISE_RESOLVED_VOID = Promise.resolve();\nexports.PROMISE_RESOLVED_VOID = PROMISE_RESOLVED_VOID;\n\nfunction sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n/**\n * https://stackoverflow.com/a/8084248\n */\n\n\nfunction randomToken() {\n  return Math.random().toString(36).substring(2);\n}\n\nvar lastMs = 0;\nvar additional = 0;\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\n\nfunction microSeconds() {\n  var ms = new Date().getTime();\n\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}\n/**\n * copied from the 'detect-node' npm module\n * We cannot use the module directly because it causes problems with rollup\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\n\n\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nexports.isNode = isNode;"]},"metadata":{},"sourceType":"script"}