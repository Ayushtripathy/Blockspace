{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nvar Storage = {\n  async: function ()\n  /*: boolean*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    return !!controller.async;\n  },\n  getItem: function (path\n  /*: string*/\n  )\n  /*: ?string*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      throw new Error('Synchronous storage is not supported by the current storage controller');\n    }\n\n    return controller.getItem(path);\n  },\n  getItemAsync: function (path\n  /*: string*/\n  )\n  /*: Promise<string>*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      return controller.getItemAsync(path);\n    }\n\n    return _promise.default.resolve(controller.getItem(path));\n  },\n  setItem: function (path\n  /*: string*/\n  , value\n  /*: string*/\n  )\n  /*: void*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      throw new Error('Synchronous storage is not supported by the current storage controller');\n    }\n\n    return controller.setItem(path, value);\n  },\n  setItemAsync: function (path\n  /*: string*/\n  , value\n  /*: string*/\n  )\n  /*: Promise<void>*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      return controller.setItemAsync(path, value);\n    }\n\n    return _promise.default.resolve(controller.setItem(path, value));\n  },\n  removeItem: function (path\n  /*: string*/\n  )\n  /*: void*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      throw new Error('Synchronous storage is not supported by the current storage controller');\n    }\n\n    return controller.removeItem(path);\n  },\n  removeItemAsync: function (path\n  /*: string*/\n  )\n  /*: Promise<void>*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      return controller.removeItemAsync(path);\n    }\n\n    return _promise.default.resolve(controller.removeItem(path));\n  },\n  getAllKeys: function ()\n  /*: Array<string>*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      throw new Error('Synchronous storage is not supported by the current storage controller');\n    }\n\n    return controller.getAllKeys();\n  },\n  getAllKeysAsync: function ()\n  /*: Promise<Array<string>>*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      return controller.getAllKeysAsync();\n    }\n\n    return _promise.default.resolve(controller.getAllKeys());\n  },\n  generatePath: function (path\n  /*: string*/\n  )\n  /*: string*/\n  {\n    var _context;\n\n    if (!_CoreManager.default.get('APPLICATION_ID')) {\n      throw new Error('You need to call Moralis.start with an applicationId before using Moralis.');\n    }\n\n    if (typeof path !== 'string') {\n      throw new Error('Tried to get a Storage path that was not a String.');\n    }\n\n    if (path[0] === '/') {\n      path = path.substr(1);\n    }\n\n    return (0, _concat.default)(_context = \"Parse/\".concat(_CoreManager.default.get('APPLICATION_ID'), \"/\")).call(_context, path);\n  },\n  _clear: function () {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.hasOwnProperty('clear')) {\n      controller.clear();\n    }\n  }\n};\nmodule.exports = Storage;\n\n_CoreManager.default.setStorageController(require('./StorageController.browser'));","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/moralis/lib/browser/Storage.js"],"names":["_interopRequireDefault","require","_promise","_concat","_CoreManager","Storage","async","controller","default","getStorageController","getItem","path","Error","getItemAsync","resolve","setItem","value","setItemAsync","removeItem","removeItemAsync","getAllKeys","getAllKeysAsync","generatePath","_context","get","substr","concat","call","_clear","hasOwnProperty","clear","module","exports","setStorageController"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nvar Storage = {\n  async: function ()\n  /*: boolean*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    return !!controller.async;\n  },\n  getItem: function (path\n  /*: string*/\n  )\n  /*: ?string*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      throw new Error('Synchronous storage is not supported by the current storage controller');\n    }\n\n    return controller.getItem(path);\n  },\n  getItemAsync: function (path\n  /*: string*/\n  )\n  /*: Promise<string>*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      return controller.getItemAsync(path);\n    }\n\n    return _promise.default.resolve(controller.getItem(path));\n  },\n  setItem: function (path\n  /*: string*/\n  , value\n  /*: string*/\n  )\n  /*: void*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      throw new Error('Synchronous storage is not supported by the current storage controller');\n    }\n\n    return controller.setItem(path, value);\n  },\n  setItemAsync: function (path\n  /*: string*/\n  , value\n  /*: string*/\n  )\n  /*: Promise<void>*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      return controller.setItemAsync(path, value);\n    }\n\n    return _promise.default.resolve(controller.setItem(path, value));\n  },\n  removeItem: function (path\n  /*: string*/\n  )\n  /*: void*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      throw new Error('Synchronous storage is not supported by the current storage controller');\n    }\n\n    return controller.removeItem(path);\n  },\n  removeItemAsync: function (path\n  /*: string*/\n  )\n  /*: Promise<void>*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      return controller.removeItemAsync(path);\n    }\n\n    return _promise.default.resolve(controller.removeItem(path));\n  },\n  getAllKeys: function ()\n  /*: Array<string>*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      throw new Error('Synchronous storage is not supported by the current storage controller');\n    }\n\n    return controller.getAllKeys();\n  },\n  getAllKeysAsync: function ()\n  /*: Promise<Array<string>>*/\n  {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.async === 1) {\n      return controller.getAllKeysAsync();\n    }\n\n    return _promise.default.resolve(controller.getAllKeys());\n  },\n  generatePath: function (path\n  /*: string*/\n  )\n  /*: string*/\n  {\n    var _context;\n\n    if (!_CoreManager.default.get('APPLICATION_ID')) {\n      throw new Error('You need to call Moralis.start with an applicationId before using Moralis.');\n    }\n\n    if (typeof path !== 'string') {\n      throw new Error('Tried to get a Storage path that was not a String.');\n    }\n\n    if (path[0] === '/') {\n      path = path.substr(1);\n    }\n\n    return (0, _concat.default)(_context = \"Parse/\".concat(_CoreManager.default.get('APPLICATION_ID'), \"/\")).call(_context, path);\n  },\n  _clear: function () {\n    var controller = _CoreManager.default.getStorageController();\n\n    if (controller.hasOwnProperty('clear')) {\n      controller.clear();\n    }\n  }\n};\nmodule.exports = Storage;\n\n_CoreManager.default.setStorageController(require('./StorageController.browser'));"]},"metadata":{},"sourceType":"script"}