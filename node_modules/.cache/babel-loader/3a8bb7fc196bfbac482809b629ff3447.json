{"ast":null,"code":"'use strict'; // TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\n\nrequire('../modules/es.string.iterator');\n\nvar $ = require('../internals/export');\n\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar USE_NATIVE_URL = require('../internals/native-url');\n\nvar global = require('../internals/global');\n\nvar bind = require('../internals/function-bind-context');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar defineProperties = require('../internals/object-define-properties').f;\n\nvar redefine = require('../internals/redefine');\n\nvar anInstance = require('../internals/an-instance');\n\nvar hasOwn = require('../internals/has-own-property');\n\nvar assign = require('../internals/object-assign');\n\nvar arrayFrom = require('../internals/array-from');\n\nvar arraySlice = require('../internals/array-slice-simple');\n\nvar codeAt = require('../internals/string-multibyte').codeAt;\n\nvar toASCII = require('../internals/string-punycode-to-ascii');\n\nvar $toString = require('../internals/to-string');\n\nvar setToStringTag = require('../internals/set-to-string-tag');\n\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\n\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\nvar NativeURL = global.URL;\nvar TypeError = global.TypeError;\nvar parseInt = global.parseInt;\nvar floor = Math.floor;\nvar pow = Math.pow;\nvar charAt = uncurryThis(''.charAt);\nvar exec = uncurryThis(/./.exec);\nvar join = uncurryThis([].join);\nvar numberToString = uncurryThis(1.0.toString);\nvar pop = uncurryThis([].pop);\nvar push = uncurryThis([].push);\nvar replace = uncurryThis(''.replace);\nvar shift = uncurryThis([].shift);\nvar split = uncurryThis(''.split);\nvar stringSlice = uncurryThis(''.slice);\nvar toLowerCase = uncurryThis(''.toLowerCase);\nvar unshift = uncurryThis([].unshift);\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\nvar ALPHA = /[a-z]/i; // eslint-disable-next-line regexp/no-obscure-range -- safe\n\nvar ALPHANUMERIC = /[\\d+-.a-z]/i;\nvar DIGIT = /\\d/;\nvar HEX_START = /^0x/i;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\da-f]+$/i;\n/* eslint-disable regexp/no-control-character -- safe */\n\nvar FORBIDDEN_HOST_CODE_POINT = /[\\0\\t\\n\\r #%/:<>?@[\\\\\\]^|]/;\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\0\\t\\n\\r #/:<>?@[\\\\\\]^|]/;\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u0020]+|[\\u0000-\\u0020]+$/g;\nvar TAB_AND_NEW_LINE = /[\\t\\n\\r]/g;\n/* eslint-enable regexp/no-control-character -- safe */\n\nvar EOF; // https://url.spec.whatwg.org/#ipv4-number-parser\n\nvar parseIPv4 = function (input) {\n  var parts = split(input, '.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.length--;\n  }\n\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n\n    if (part.length > 1 && charAt(part, 0) == '0') {\n      radix = exec(HEX_START, part) ? 16 : 8;\n      part = stringSlice(part, radix == 8 ? 1 : 2);\n    }\n\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!exec(radix == 10 ? DEC : radix == 8 ? OCT : HEX, part)) return input;\n      number = parseInt(part, radix);\n    }\n\n    push(numbers, number);\n  }\n\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n\n  ipv4 = pop(numbers);\n\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n\n  return ipv4;\n}; // https://url.spec.whatwg.org/#concept-ipv6-parser\n// eslint-disable-next-line max-statements -- TODO\n\n\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var chr = function () {\n    return charAt(input, pointer);\n  };\n\n  if (chr() == ':') {\n    if (charAt(input, 1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n\n  while (chr()) {\n    if (pieceIndex == 8) return;\n\n    if (chr() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n\n    value = length = 0;\n\n    while (length < 4 && exec(HEX, chr())) {\n      value = value * 16 + parseInt(chr(), 16);\n      pointer++;\n      length++;\n    }\n\n    if (chr() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n\n      while (chr()) {\n        ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (chr() == '.' && numbersSeen < 4) pointer++;else return;\n        }\n\n        if (!exec(DIGIT, chr())) return;\n\n        while (exec(DIGIT, chr())) {\n          number = parseInt(chr(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;else if (ipv4Piece == 0) return;else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n\n      if (numbersSeen != 4) return;\n      break;\n    } else if (chr() == ':') {\n      pointer++;\n      if (!chr()) return;\n    } else if (chr()) return;\n\n    address[pieceIndex++] = value;\n  }\n\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n\n  return maxIndex;\n}; // https://url.spec.whatwg.org/#host-serializing\n\n\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0; // ipv4\n\n  if (typeof host == 'number') {\n    result = [];\n\n    for (index = 0; index < 4; index++) {\n      unshift(result, host % 256);\n      host = floor(host / 256);\n    }\n\n    return join(result, '.'); // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += numberToString(host[index], 16);\n        if (index < 7) result += ':';\n      }\n    }\n\n    return '[' + result + ']';\n  }\n\n  return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1,\n  '\"': 1,\n  '<': 1,\n  '>': 1,\n  '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1,\n  '?': 1,\n  '{': 1,\n  '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1,\n  ':': 1,\n  ';': 1,\n  '=': 1,\n  '@': 1,\n  '[': 1,\n  '\\\\': 1,\n  ']': 1,\n  '^': 1,\n  '|': 1\n});\n\nvar percentEncode = function (chr, set) {\n  var code = codeAt(chr, 0);\n  return code > 0x20 && code < 0x7F && !hasOwn(set, chr) ? chr : encodeURIComponent(chr);\n}; // https://url.spec.whatwg.org/#special-scheme\n\n\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n}; // https://url.spec.whatwg.org/#windows-drive-letter\n\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && exec(ALPHA, charAt(string, 0)) && ((second = charAt(string, 1)) == ':' || !normalized && second == '|');\n}; // https://url.spec.whatwg.org/#start-with-a-windows-drive-letter\n\n\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(stringSlice(string, 0, 2)) && (string.length == 2 || (third = charAt(string, 2)) === '/' || third === '\\\\' || third === '?' || third === '#');\n}; // https://url.spec.whatwg.org/#single-dot-path-segment\n\n\nvar isSingleDot = function (segment) {\n  return segment === '.' || toLowerCase(segment) === '%2e';\n}; // https://url.spec.whatwg.org/#double-dot-path-segment\n\n\nvar isDoubleDot = function (segment) {\n  segment = toLowerCase(segment);\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n}; // States:\n\n\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\n\nvar URLState = function (url, isBase, base) {\n  var urlString = $toString(url);\n  var baseState, failure, searchParams;\n\n  if (isBase) {\n    failure = this.parse(urlString);\n    if (failure) throw TypeError(failure);\n    this.searchParams = null;\n  } else {\n    if (base !== undefined) baseState = new URLState(base, true);\n    failure = this.parse(urlString, null, baseState);\n    if (failure) throw TypeError(failure);\n    searchParams = getInternalSearchParamsState(new URLSearchParams());\n    searchParams.bindURL(this);\n    this.searchParams = searchParams;\n  }\n};\n\nURLState.prototype = {\n  type: 'URL',\n  // https://url.spec.whatwg.org/#url-parsing\n  // eslint-disable-next-line max-statements -- TODO\n  parse: function (input, stateOverride, base) {\n    var url = this;\n    var state = stateOverride || SCHEME_START;\n    var pointer = 0;\n    var buffer = '';\n    var seenAt = false;\n    var seenBracket = false;\n    var seenPasswordToken = false;\n    var codePoints, chr, bufferCodePoints, failure;\n    input = $toString(input);\n\n    if (!stateOverride) {\n      url.scheme = '';\n      url.username = '';\n      url.password = '';\n      url.host = null;\n      url.port = null;\n      url.path = [];\n      url.query = null;\n      url.fragment = null;\n      url.cannotBeABaseURL = false;\n      input = replace(input, LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n    }\n\n    input = replace(input, TAB_AND_NEW_LINE, '');\n    codePoints = arrayFrom(input);\n\n    while (pointer <= codePoints.length) {\n      chr = codePoints[pointer];\n\n      switch (state) {\n        case SCHEME_START:\n          if (chr && exec(ALPHA, chr)) {\n            buffer += toLowerCase(chr);\n            state = SCHEME;\n          } else if (!stateOverride) {\n            state = NO_SCHEME;\n            continue;\n          } else return INVALID_SCHEME;\n\n          break;\n\n        case SCHEME:\n          if (chr && (exec(ALPHANUMERIC, chr) || chr == '+' || chr == '-' || chr == '.')) {\n            buffer += toLowerCase(chr);\n          } else if (chr == ':') {\n            if (stateOverride && (url.isSpecial() != hasOwn(specialSchemes, buffer) || buffer == 'file' && (url.includesCredentials() || url.port !== null) || url.scheme == 'file' && !url.host)) return;\n            url.scheme = buffer;\n\n            if (stateOverride) {\n              if (url.isSpecial() && specialSchemes[url.scheme] == url.port) url.port = null;\n              return;\n            }\n\n            buffer = '';\n\n            if (url.scheme == 'file') {\n              state = FILE;\n            } else if (url.isSpecial() && base && base.scheme == url.scheme) {\n              state = SPECIAL_RELATIVE_OR_AUTHORITY;\n            } else if (url.isSpecial()) {\n              state = SPECIAL_AUTHORITY_SLASHES;\n            } else if (codePoints[pointer + 1] == '/') {\n              state = PATH_OR_AUTHORITY;\n              pointer++;\n            } else {\n              url.cannotBeABaseURL = true;\n              push(url.path, '');\n              state = CANNOT_BE_A_BASE_URL_PATH;\n            }\n          } else if (!stateOverride) {\n            buffer = '';\n            state = NO_SCHEME;\n            pointer = 0;\n            continue;\n          } else return INVALID_SCHEME;\n\n          break;\n\n        case NO_SCHEME:\n          if (!base || base.cannotBeABaseURL && chr != '#') return INVALID_SCHEME;\n\n          if (base.cannotBeABaseURL && chr == '#') {\n            url.scheme = base.scheme;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n            url.fragment = '';\n            url.cannotBeABaseURL = true;\n            state = FRAGMENT;\n            break;\n          }\n\n          state = base.scheme == 'file' ? FILE : RELATIVE;\n          continue;\n\n        case SPECIAL_RELATIVE_OR_AUTHORITY:\n          if (chr == '/' && codePoints[pointer + 1] == '/') {\n            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n            pointer++;\n          } else {\n            state = RELATIVE;\n            continue;\n          }\n\n          break;\n\n        case PATH_OR_AUTHORITY:\n          if (chr == '/') {\n            state = AUTHORITY;\n            break;\n          } else {\n            state = PATH;\n            continue;\n          }\n\n        case RELATIVE:\n          url.scheme = base.scheme;\n\n          if (chr == EOF) {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n          } else if (chr == '/' || chr == '\\\\' && url.isSpecial()) {\n            state = RELATIVE_SLASH;\n          } else if (chr == '?') {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.query = '';\n            state = QUERY;\n          } else if (chr == '#') {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.path.length--;\n            state = PATH;\n            continue;\n          }\n\n          break;\n\n        case RELATIVE_SLASH:\n          if (url.isSpecial() && (chr == '/' || chr == '\\\\')) {\n            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          } else if (chr == '/') {\n            state = AUTHORITY;\n          } else {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            state = PATH;\n            continue;\n          }\n\n          break;\n\n        case SPECIAL_AUTHORITY_SLASHES:\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          if (chr != '/' || charAt(buffer, pointer + 1) != '/') continue;\n          pointer++;\n          break;\n\n        case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n          if (chr != '/' && chr != '\\\\') {\n            state = AUTHORITY;\n            continue;\n          }\n\n          break;\n\n        case AUTHORITY:\n          if (chr == '@') {\n            if (seenAt) buffer = '%40' + buffer;\n            seenAt = true;\n            bufferCodePoints = arrayFrom(buffer);\n\n            for (var i = 0; i < bufferCodePoints.length; i++) {\n              var codePoint = bufferCodePoints[i];\n\n              if (codePoint == ':' && !seenPasswordToken) {\n                seenPasswordToken = true;\n                continue;\n              }\n\n              var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n              if (seenPasswordToken) url.password += encodedCodePoints;else url.username += encodedCodePoints;\n            }\n\n            buffer = '';\n          } else if (chr == EOF || chr == '/' || chr == '?' || chr == '#' || chr == '\\\\' && url.isSpecial()) {\n            if (seenAt && buffer == '') return INVALID_AUTHORITY;\n            pointer -= arrayFrom(buffer).length + 1;\n            buffer = '';\n            state = HOST;\n          } else buffer += chr;\n\n          break;\n\n        case HOST:\n        case HOSTNAME:\n          if (stateOverride && url.scheme == 'file') {\n            state = FILE_HOST;\n            continue;\n          } else if (chr == ':' && !seenBracket) {\n            if (buffer == '') return INVALID_HOST;\n            failure = url.parseHost(buffer);\n            if (failure) return failure;\n            buffer = '';\n            state = PORT;\n            if (stateOverride == HOSTNAME) return;\n          } else if (chr == EOF || chr == '/' || chr == '?' || chr == '#' || chr == '\\\\' && url.isSpecial()) {\n            if (url.isSpecial() && buffer == '') return INVALID_HOST;\n            if (stateOverride && buffer == '' && (url.includesCredentials() || url.port !== null)) return;\n            failure = url.parseHost(buffer);\n            if (failure) return failure;\n            buffer = '';\n            state = PATH_START;\n            if (stateOverride) return;\n            continue;\n          } else {\n            if (chr == '[') seenBracket = true;else if (chr == ']') seenBracket = false;\n            buffer += chr;\n          }\n\n          break;\n\n        case PORT:\n          if (exec(DIGIT, chr)) {\n            buffer += chr;\n          } else if (chr == EOF || chr == '/' || chr == '?' || chr == '#' || chr == '\\\\' && url.isSpecial() || stateOverride) {\n            if (buffer != '') {\n              var port = parseInt(buffer, 10);\n              if (port > 0xFFFF) return INVALID_PORT;\n              url.port = url.isSpecial() && port === specialSchemes[url.scheme] ? null : port;\n              buffer = '';\n            }\n\n            if (stateOverride) return;\n            state = PATH_START;\n            continue;\n          } else return INVALID_PORT;\n\n          break;\n\n        case FILE:\n          url.scheme = 'file';\n          if (chr == '/' || chr == '\\\\') state = FILE_SLASH;else if (base && base.scheme == 'file') {\n            if (chr == EOF) {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              url.query = base.query;\n            } else if (chr == '?') {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              url.query = '';\n              state = QUERY;\n            } else if (chr == '#') {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              url.query = base.query;\n              url.fragment = '';\n              state = FRAGMENT;\n            } else {\n              if (!startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {\n                url.host = base.host;\n                url.path = arraySlice(base.path);\n                url.shortenPath();\n              }\n\n              state = PATH;\n              continue;\n            }\n          } else {\n            state = PATH;\n            continue;\n          }\n          break;\n\n        case FILE_SLASH:\n          if (chr == '/' || chr == '\\\\') {\n            state = FILE_HOST;\n            break;\n          }\n\n          if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {\n            if (isWindowsDriveLetter(base.path[0], true)) push(url.path, base.path[0]);else url.host = base.host;\n          }\n\n          state = PATH;\n          continue;\n\n        case FILE_HOST:\n          if (chr == EOF || chr == '/' || chr == '\\\\' || chr == '?' || chr == '#') {\n            if (!stateOverride && isWindowsDriveLetter(buffer)) {\n              state = PATH;\n            } else if (buffer == '') {\n              url.host = '';\n              if (stateOverride) return;\n              state = PATH_START;\n            } else {\n              failure = url.parseHost(buffer);\n              if (failure) return failure;\n              if (url.host == 'localhost') url.host = '';\n              if (stateOverride) return;\n              buffer = '';\n              state = PATH_START;\n            }\n\n            continue;\n          } else buffer += chr;\n\n          break;\n\n        case PATH_START:\n          if (url.isSpecial()) {\n            state = PATH;\n            if (chr != '/' && chr != '\\\\') continue;\n          } else if (!stateOverride && chr == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (!stateOverride && chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          } else if (chr != EOF) {\n            state = PATH;\n            if (chr != '/') continue;\n          }\n\n          break;\n\n        case PATH:\n          if (chr == EOF || chr == '/' || chr == '\\\\' && url.isSpecial() || !stateOverride && (chr == '?' || chr == '#')) {\n            if (isDoubleDot(buffer)) {\n              url.shortenPath();\n\n              if (chr != '/' && !(chr == '\\\\' && url.isSpecial())) {\n                push(url.path, '');\n              }\n            } else if (isSingleDot(buffer)) {\n              if (chr != '/' && !(chr == '\\\\' && url.isSpecial())) {\n                push(url.path, '');\n              }\n            } else {\n              if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n                if (url.host) url.host = '';\n                buffer = charAt(buffer, 0) + ':'; // normalize windows drive letter\n              }\n\n              push(url.path, buffer);\n            }\n\n            buffer = '';\n\n            if (url.scheme == 'file' && (chr == EOF || chr == '?' || chr == '#')) {\n              while (url.path.length > 1 && url.path[0] === '') {\n                shift(url.path);\n              }\n            }\n\n            if (chr == '?') {\n              url.query = '';\n              state = QUERY;\n            } else if (chr == '#') {\n              url.fragment = '';\n              state = FRAGMENT;\n            }\n          } else {\n            buffer += percentEncode(chr, pathPercentEncodeSet);\n          }\n\n          break;\n\n        case CANNOT_BE_A_BASE_URL_PATH:\n          if (chr == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          } else if (chr != EOF) {\n            url.path[0] += percentEncode(chr, C0ControlPercentEncodeSet);\n          }\n\n          break;\n\n        case QUERY:\n          if (!stateOverride && chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          } else if (chr != EOF) {\n            if (chr == \"'\" && url.isSpecial()) url.query += '%27';else if (chr == '#') url.query += '%23';else url.query += percentEncode(chr, C0ControlPercentEncodeSet);\n          }\n\n          break;\n\n        case FRAGMENT:\n          if (chr != EOF) url.fragment += percentEncode(chr, fragmentPercentEncodeSet);\n          break;\n      }\n\n      pointer++;\n    }\n  },\n  // https://url.spec.whatwg.org/#host-parsing\n  parseHost: function (input) {\n    var result, codePoints, index;\n\n    if (charAt(input, 0) == '[') {\n      if (charAt(input, input.length - 1) != ']') return INVALID_HOST;\n      result = parseIPv6(stringSlice(input, 1, -1));\n      if (!result) return INVALID_HOST;\n      this.host = result; // opaque host\n    } else if (!this.isSpecial()) {\n      if (exec(FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT, input)) return INVALID_HOST;\n      result = '';\n      codePoints = arrayFrom(input);\n\n      for (index = 0; index < codePoints.length; index++) {\n        result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n      }\n\n      this.host = result;\n    } else {\n      input = toASCII(input);\n      if (exec(FORBIDDEN_HOST_CODE_POINT, input)) return INVALID_HOST;\n      result = parseIPv4(input);\n      if (result === null) return INVALID_HOST;\n      this.host = result;\n    }\n  },\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\n  cannotHaveUsernamePasswordPort: function () {\n    return !this.host || this.cannotBeABaseURL || this.scheme == 'file';\n  },\n  // https://url.spec.whatwg.org/#include-credentials\n  includesCredentials: function () {\n    return this.username != '' || this.password != '';\n  },\n  // https://url.spec.whatwg.org/#is-special\n  isSpecial: function () {\n    return hasOwn(specialSchemes, this.scheme);\n  },\n  // https://url.spec.whatwg.org/#shorten-a-urls-path\n  shortenPath: function () {\n    var path = this.path;\n    var pathSize = path.length;\n\n    if (pathSize && (this.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n      path.length--;\n    }\n  },\n  // https://url.spec.whatwg.org/#concept-url-serializer\n  serialize: function () {\n    var url = this;\n    var scheme = url.scheme;\n    var username = url.username;\n    var password = url.password;\n    var host = url.host;\n    var port = url.port;\n    var path = url.path;\n    var query = url.query;\n    var fragment = url.fragment;\n    var output = scheme + ':';\n\n    if (host !== null) {\n      output += '//';\n\n      if (url.includesCredentials()) {\n        output += username + (password ? ':' + password : '') + '@';\n      }\n\n      output += serializeHost(host);\n      if (port !== null) output += ':' + port;\n    } else if (scheme == 'file') output += '//';\n\n    output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';\n    if (query !== null) output += '?' + query;\n    if (fragment !== null) output += '#' + fragment;\n    return output;\n  },\n  // https://url.spec.whatwg.org/#dom-url-href\n  setHref: function (href) {\n    var failure = this.parse(href);\n    if (failure) throw TypeError(failure);\n    this.searchParams.update();\n  },\n  // https://url.spec.whatwg.org/#dom-url-origin\n  getOrigin: function () {\n    var scheme = this.scheme;\n    var port = this.port;\n    if (scheme == 'blob') try {\n      return new URLConstructor(scheme.path[0]).origin;\n    } catch (error) {\n      return 'null';\n    }\n    if (scheme == 'file' || !this.isSpecial()) return 'null';\n    return scheme + '://' + serializeHost(this.host) + (port !== null ? ':' + port : '');\n  },\n  // https://url.spec.whatwg.org/#dom-url-protocol\n  getProtocol: function () {\n    return this.scheme + ':';\n  },\n  setProtocol: function (protocol) {\n    this.parse($toString(protocol) + ':', SCHEME_START);\n  },\n  // https://url.spec.whatwg.org/#dom-url-username\n  getUsername: function () {\n    return this.username;\n  },\n  setUsername: function (username) {\n    var codePoints = arrayFrom($toString(username));\n    if (this.cannotHaveUsernamePasswordPort()) return;\n    this.username = '';\n\n    for (var i = 0; i < codePoints.length; i++) {\n      this.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n    }\n  },\n  // https://url.spec.whatwg.org/#dom-url-password\n  getPassword: function () {\n    return this.password;\n  },\n  setPassword: function (password) {\n    var codePoints = arrayFrom($toString(password));\n    if (this.cannotHaveUsernamePasswordPort()) return;\n    this.password = '';\n\n    for (var i = 0; i < codePoints.length; i++) {\n      this.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n    }\n  },\n  // https://url.spec.whatwg.org/#dom-url-host\n  getHost: function () {\n    var host = this.host;\n    var port = this.port;\n    return host === null ? '' : port === null ? serializeHost(host) : serializeHost(host) + ':' + port;\n  },\n  setHost: function (host) {\n    if (this.cannotBeABaseURL) return;\n    this.parse(host, HOST);\n  },\n  // https://url.spec.whatwg.org/#dom-url-hostname\n  getHostname: function () {\n    var host = this.host;\n    return host === null ? '' : serializeHost(host);\n  },\n  setHostname: function (hostname) {\n    if (this.cannotBeABaseURL) return;\n    this.parse(hostname, HOSTNAME);\n  },\n  // https://url.spec.whatwg.org/#dom-url-port\n  getPort: function () {\n    var port = this.port;\n    return port === null ? '' : $toString(port);\n  },\n  setPort: function (port) {\n    if (this.cannotHaveUsernamePasswordPort()) return;\n    port = $toString(port);\n    if (port == '') this.port = null;else this.parse(port, PORT);\n  },\n  // https://url.spec.whatwg.org/#dom-url-pathname\n  getPathname: function () {\n    var path = this.path;\n    return this.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';\n  },\n  setPathname: function (pathname) {\n    if (this.cannotBeABaseURL) return;\n    this.path = [];\n    this.parse(pathname, PATH_START);\n  },\n  // https://url.spec.whatwg.org/#dom-url-search\n  getSearch: function () {\n    var query = this.query;\n    return query ? '?' + query : '';\n  },\n  setSearch: function (search) {\n    search = $toString(search);\n\n    if (search == '') {\n      this.query = null;\n    } else {\n      if ('?' == charAt(search, 0)) search = stringSlice(search, 1);\n      this.query = '';\n      this.parse(search, QUERY);\n    }\n\n    this.searchParams.update();\n  },\n  // https://url.spec.whatwg.org/#dom-url-searchparams\n  getSearchParams: function () {\n    return this.searchParams.facade;\n  },\n  // https://url.spec.whatwg.org/#dom-url-hash\n  getHash: function () {\n    var fragment = this.fragment;\n    return fragment ? '#' + fragment : '';\n  },\n  setHash: function (hash) {\n    hash = $toString(hash);\n\n    if (hash == '') {\n      this.fragment = null;\n      return;\n    }\n\n    if ('#' == charAt(hash, 0)) hash = stringSlice(hash, 1);\n    this.fragment = '';\n    this.parse(hash, FRAGMENT);\n  },\n  update: function () {\n    this.query = this.searchParams.serialize() || null;\n  }\n}; // `URL` constructor\n// https://url.spec.whatwg.org/#url-class\n\nvar URLConstructor = function URL(url\n/* , base */\n) {\n  var that = anInstance(this, URLPrototype);\n  var base = validateArgumentsLength(arguments.length, 1) > 1 ? arguments[1] : undefined;\n  var state = setInternalState(that, new URLState(url, false, base));\n\n  if (!DESCRIPTORS) {\n    that.href = state.serialize();\n    that.origin = state.getOrigin();\n    that.protocol = state.getProtocol();\n    that.username = state.getUsername();\n    that.password = state.getPassword();\n    that.host = state.getHost();\n    that.hostname = state.getHostname();\n    that.port = state.getPort();\n    that.pathname = state.getPathname();\n    that.search = state.getSearch();\n    that.searchParams = state.getSearchParams();\n    that.hash = state.getHash();\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar accessorDescriptor = function (getter, setter) {\n  return {\n    get: function () {\n      return getInternalURLState(this)[getter]();\n    },\n    set: setter && function (value) {\n      return getInternalURLState(this)[setter](value);\n    },\n    configurable: true,\n    enumerable: true\n  };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor('serialize', 'setHref'),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor('getOrigin'),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor('getProtocol', 'setProtocol'),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor('getUsername', 'setUsername'),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor('getPassword', 'setPassword'),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor('getHost', 'setHost'),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor('getHostname', 'setHostname'),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor('getPort', 'setPort'),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor('getPathname', 'setPathname'),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor('getSearch', 'setSearch'),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor('getSearchParams'),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor('getHash', 'setHash')\n  });\n} // `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n\n\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return getInternalURLState(this).serialize();\n}, {\n  enumerable: true\n}); // `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\n\nredefine(URLPrototype, 'toString', function toString() {\n  return getInternalURLState(this).serialize();\n}, {\n  enumerable: true\n});\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL; // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', bind(nativeCreateObjectURL, NativeURL)); // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', bind(nativeRevokeObjectURL, NativeURL));\n}\n\nsetToStringTag(URLConstructor, 'URL');\n$({\n  global: true,\n  forced: !USE_NATIVE_URL,\n  sham: !DESCRIPTORS\n}, {\n  URL: URLConstructor\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/core-js-pure/modules/web.url.js"],"names":["require","$","DESCRIPTORS","USE_NATIVE_URL","global","bind","uncurryThis","defineProperties","f","redefine","anInstance","hasOwn","assign","arrayFrom","arraySlice","codeAt","toASCII","$toString","setToStringTag","validateArgumentsLength","URLSearchParamsModule","InternalStateModule","setInternalState","set","getInternalURLState","getterFor","URLSearchParams","getInternalSearchParamsState","getState","NativeURL","URL","TypeError","parseInt","floor","Math","pow","charAt","exec","join","numberToString","toString","pop","push","replace","shift","split","stringSlice","slice","toLowerCase","unshift","INVALID_AUTHORITY","INVALID_SCHEME","INVALID_HOST","INVALID_PORT","ALPHA","ALPHANUMERIC","DIGIT","HEX_START","OCT","DEC","HEX","FORBIDDEN_HOST_CODE_POINT","FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT","LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE","TAB_AND_NEW_LINE","EOF","parseIPv4","input","parts","partsLength","numbers","index","part","radix","number","ipv4","length","parseIPv6","address","pieceIndex","compress","pointer","value","numbersSeen","ipv4Piece","swaps","swap","chr","findLongestZeroSequence","ipv6","maxIndex","maxLength","currStart","currLength","serializeHost","host","result","ignore0","C0ControlPercentEncodeSet","fragmentPercentEncodeSet","pathPercentEncodeSet","userinfoPercentEncodeSet","percentEncode","code","encodeURIComponent","specialSchemes","ftp","file","http","https","ws","wss","isWindowsDriveLetter","string","normalized","second","startsWithWindowsDriveLetter","third","isSingleDot","segment","isDoubleDot","SCHEME_START","SCHEME","NO_SCHEME","SPECIAL_RELATIVE_OR_AUTHORITY","PATH_OR_AUTHORITY","RELATIVE","RELATIVE_SLASH","SPECIAL_AUTHORITY_SLASHES","SPECIAL_AUTHORITY_IGNORE_SLASHES","AUTHORITY","HOST","HOSTNAME","PORT","FILE","FILE_SLASH","FILE_HOST","PATH_START","PATH","CANNOT_BE_A_BASE_URL_PATH","QUERY","FRAGMENT","URLState","url","isBase","base","urlString","baseState","failure","searchParams","parse","undefined","bindURL","prototype","type","stateOverride","state","buffer","seenAt","seenBracket","seenPasswordToken","codePoints","bufferCodePoints","scheme","username","password","port","path","query","fragment","cannotBeABaseURL","isSpecial","includesCredentials","i","codePoint","encodedCodePoints","parseHost","shortenPath","cannotHaveUsernamePasswordPort","pathSize","serialize","output","setHref","href","update","getOrigin","URLConstructor","origin","error","getProtocol","setProtocol","protocol","getUsername","setUsername","getPassword","setPassword","getHost","setHost","getHostname","setHostname","hostname","getPort","setPort","getPathname","setPathname","pathname","getSearch","setSearch","search","getSearchParams","facade","getHash","setHash","hash","that","URLPrototype","arguments","accessorDescriptor","getter","setter","get","configurable","enumerable","toJSON","nativeCreateObjectURL","createObjectURL","nativeRevokeObjectURL","revokeObjectURL","forced","sham"],"mappings":"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","sourcesContent":["'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.string.iterator');\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar global = require('../internals/global');\nvar bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineProperties = require('../internals/object-define-properties').f;\nvar redefine = require('../internals/redefine');\nvar anInstance = require('../internals/an-instance');\nvar hasOwn = require('../internals/has-own-property');\nvar assign = require('../internals/object-assign');\nvar arrayFrom = require('../internals/array-from');\nvar arraySlice = require('../internals/array-slice-simple');\nvar codeAt = require('../internals/string-multibyte').codeAt;\nvar toASCII = require('../internals/string-punycode-to-ascii');\nvar $toString = require('../internals/to-string');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\n\nvar NativeURL = global.URL;\nvar TypeError = global.TypeError;\nvar parseInt = global.parseInt;\nvar floor = Math.floor;\nvar pow = Math.pow;\nvar charAt = uncurryThis(''.charAt);\nvar exec = uncurryThis(/./.exec);\nvar join = uncurryThis([].join);\nvar numberToString = uncurryThis(1.0.toString);\nvar pop = uncurryThis([].pop);\nvar push = uncurryThis([].push);\nvar replace = uncurryThis(''.replace);\nvar shift = uncurryThis([].shift);\nvar split = uncurryThis(''.split);\nvar stringSlice = uncurryThis(''.slice);\nvar toLowerCase = uncurryThis(''.toLowerCase);\nvar unshift = uncurryThis([].unshift);\n\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\n\nvar ALPHA = /[a-z]/i;\n// eslint-disable-next-line regexp/no-obscure-range -- safe\nvar ALPHANUMERIC = /[\\d+-.a-z]/i;\nvar DIGIT = /\\d/;\nvar HEX_START = /^0x/i;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\da-f]+$/i;\n/* eslint-disable regexp/no-control-character -- safe */\nvar FORBIDDEN_HOST_CODE_POINT = /[\\0\\t\\n\\r #%/:<>?@[\\\\\\]^|]/;\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\0\\t\\n\\r #/:<>?@[\\\\\\]^|]/;\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u0020]+|[\\u0000-\\u0020]+$/g;\nvar TAB_AND_NEW_LINE = /[\\t\\n\\r]/g;\n/* eslint-enable regexp/no-control-character -- safe */\nvar EOF;\n\n// https://url.spec.whatwg.org/#ipv4-number-parser\nvar parseIPv4 = function (input) {\n  var parts = split(input, '.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.length--;\n  }\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n    if (part.length > 1 && charAt(part, 0) == '0') {\n      radix = exec(HEX_START, part) ? 16 : 8;\n      part = stringSlice(part, radix == 8 ? 1 : 2);\n    }\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!exec(radix == 10 ? DEC : radix == 8 ? OCT : HEX, part)) return input;\n      number = parseInt(part, radix);\n    }\n    push(numbers, number);\n  }\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n  ipv4 = pop(numbers);\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n  return ipv4;\n};\n\n// https://url.spec.whatwg.org/#concept-ipv6-parser\n// eslint-disable-next-line max-statements -- TODO\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var chr = function () {\n    return charAt(input, pointer);\n  };\n\n  if (chr() == ':') {\n    if (charAt(input, 1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n  while (chr()) {\n    if (pieceIndex == 8) return;\n    if (chr() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n    value = length = 0;\n    while (length < 4 && exec(HEX, chr())) {\n      value = value * 16 + parseInt(chr(), 16);\n      pointer++;\n      length++;\n    }\n    if (chr() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n      while (chr()) {\n        ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (chr() == '.' && numbersSeen < 4) pointer++;\n          else return;\n        }\n        if (!exec(DIGIT, chr())) return;\n        while (exec(DIGIT, chr())) {\n          number = parseInt(chr(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;\n          else if (ipv4Piece == 0) return;\n          else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n      if (numbersSeen != 4) return;\n      break;\n    } else if (chr() == ':') {\n      pointer++;\n      if (!chr()) return;\n    } else if (chr()) return;\n    address[pieceIndex++] = value;\n  }\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n  return maxIndex;\n};\n\n// https://url.spec.whatwg.org/#host-serializing\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0;\n  // ipv4\n  if (typeof host == 'number') {\n    result = [];\n    for (index = 0; index < 4; index++) {\n      unshift(result, host % 256);\n      host = floor(host / 256);\n    } return join(result, '.');\n  // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += numberToString(host[index], 16);\n        if (index < 7) result += ':';\n      }\n    }\n    return '[' + result + ']';\n  } return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1, '\"': 1, '<': 1, '>': 1, '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1, '?': 1, '{': 1, '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\\\': 1, ']': 1, '^': 1, '|': 1\n});\n\nvar percentEncode = function (chr, set) {\n  var code = codeAt(chr, 0);\n  return code > 0x20 && code < 0x7F && !hasOwn(set, chr) ? chr : encodeURIComponent(chr);\n};\n\n// https://url.spec.whatwg.org/#special-scheme\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\n// https://url.spec.whatwg.org/#windows-drive-letter\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && exec(ALPHA, charAt(string, 0))\n    && ((second = charAt(string, 1)) == ':' || (!normalized && second == '|'));\n};\n\n// https://url.spec.whatwg.org/#start-with-a-windows-drive-letter\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(stringSlice(string, 0, 2)) && (\n    string.length == 2 ||\n    ((third = charAt(string, 2)) === '/' || third === '\\\\' || third === '?' || third === '#')\n  );\n};\n\n// https://url.spec.whatwg.org/#single-dot-path-segment\nvar isSingleDot = function (segment) {\n  return segment === '.' || toLowerCase(segment) === '%2e';\n};\n\n// https://url.spec.whatwg.org/#double-dot-path-segment\nvar isDoubleDot = function (segment) {\n  segment = toLowerCase(segment);\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n};\n\n// States:\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\n\nvar URLState = function (url, isBase, base) {\n  var urlString = $toString(url);\n  var baseState, failure, searchParams;\n  if (isBase) {\n    failure = this.parse(urlString);\n    if (failure) throw TypeError(failure);\n    this.searchParams = null;\n  } else {\n    if (base !== undefined) baseState = new URLState(base, true);\n    failure = this.parse(urlString, null, baseState);\n    if (failure) throw TypeError(failure);\n    searchParams = getInternalSearchParamsState(new URLSearchParams());\n    searchParams.bindURL(this);\n    this.searchParams = searchParams;\n  }\n};\n\nURLState.prototype = {\n  type: 'URL',\n  // https://url.spec.whatwg.org/#url-parsing\n  // eslint-disable-next-line max-statements -- TODO\n  parse: function (input, stateOverride, base) {\n    var url = this;\n    var state = stateOverride || SCHEME_START;\n    var pointer = 0;\n    var buffer = '';\n    var seenAt = false;\n    var seenBracket = false;\n    var seenPasswordToken = false;\n    var codePoints, chr, bufferCodePoints, failure;\n\n    input = $toString(input);\n\n    if (!stateOverride) {\n      url.scheme = '';\n      url.username = '';\n      url.password = '';\n      url.host = null;\n      url.port = null;\n      url.path = [];\n      url.query = null;\n      url.fragment = null;\n      url.cannotBeABaseURL = false;\n      input = replace(input, LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n    }\n\n    input = replace(input, TAB_AND_NEW_LINE, '');\n\n    codePoints = arrayFrom(input);\n\n    while (pointer <= codePoints.length) {\n      chr = codePoints[pointer];\n      switch (state) {\n        case SCHEME_START:\n          if (chr && exec(ALPHA, chr)) {\n            buffer += toLowerCase(chr);\n            state = SCHEME;\n          } else if (!stateOverride) {\n            state = NO_SCHEME;\n            continue;\n          } else return INVALID_SCHEME;\n          break;\n\n        case SCHEME:\n          if (chr && (exec(ALPHANUMERIC, chr) || chr == '+' || chr == '-' || chr == '.')) {\n            buffer += toLowerCase(chr);\n          } else if (chr == ':') {\n            if (stateOverride && (\n              (url.isSpecial() != hasOwn(specialSchemes, buffer)) ||\n              (buffer == 'file' && (url.includesCredentials() || url.port !== null)) ||\n              (url.scheme == 'file' && !url.host)\n            )) return;\n            url.scheme = buffer;\n            if (stateOverride) {\n              if (url.isSpecial() && specialSchemes[url.scheme] == url.port) url.port = null;\n              return;\n            }\n            buffer = '';\n            if (url.scheme == 'file') {\n              state = FILE;\n            } else if (url.isSpecial() && base && base.scheme == url.scheme) {\n              state = SPECIAL_RELATIVE_OR_AUTHORITY;\n            } else if (url.isSpecial()) {\n              state = SPECIAL_AUTHORITY_SLASHES;\n            } else if (codePoints[pointer + 1] == '/') {\n              state = PATH_OR_AUTHORITY;\n              pointer++;\n            } else {\n              url.cannotBeABaseURL = true;\n              push(url.path, '');\n              state = CANNOT_BE_A_BASE_URL_PATH;\n            }\n          } else if (!stateOverride) {\n            buffer = '';\n            state = NO_SCHEME;\n            pointer = 0;\n            continue;\n          } else return INVALID_SCHEME;\n          break;\n\n        case NO_SCHEME:\n          if (!base || (base.cannotBeABaseURL && chr != '#')) return INVALID_SCHEME;\n          if (base.cannotBeABaseURL && chr == '#') {\n            url.scheme = base.scheme;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n            url.fragment = '';\n            url.cannotBeABaseURL = true;\n            state = FRAGMENT;\n            break;\n          }\n          state = base.scheme == 'file' ? FILE : RELATIVE;\n          continue;\n\n        case SPECIAL_RELATIVE_OR_AUTHORITY:\n          if (chr == '/' && codePoints[pointer + 1] == '/') {\n            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n            pointer++;\n          } else {\n            state = RELATIVE;\n            continue;\n          } break;\n\n        case PATH_OR_AUTHORITY:\n          if (chr == '/') {\n            state = AUTHORITY;\n            break;\n          } else {\n            state = PATH;\n            continue;\n          }\n\n        case RELATIVE:\n          url.scheme = base.scheme;\n          if (chr == EOF) {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n          } else if (chr == '/' || (chr == '\\\\' && url.isSpecial())) {\n            state = RELATIVE_SLASH;\n          } else if (chr == '?') {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.query = '';\n            state = QUERY;\n          } else if (chr == '#') {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.path.length--;\n            state = PATH;\n            continue;\n          } break;\n\n        case RELATIVE_SLASH:\n          if (url.isSpecial() && (chr == '/' || chr == '\\\\')) {\n            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          } else if (chr == '/') {\n            state = AUTHORITY;\n          } else {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            state = PATH;\n            continue;\n          } break;\n\n        case SPECIAL_AUTHORITY_SLASHES:\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          if (chr != '/' || charAt(buffer, pointer + 1) != '/') continue;\n          pointer++;\n          break;\n\n        case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n          if (chr != '/' && chr != '\\\\') {\n            state = AUTHORITY;\n            continue;\n          } break;\n\n        case AUTHORITY:\n          if (chr == '@') {\n            if (seenAt) buffer = '%40' + buffer;\n            seenAt = true;\n            bufferCodePoints = arrayFrom(buffer);\n            for (var i = 0; i < bufferCodePoints.length; i++) {\n              var codePoint = bufferCodePoints[i];\n              if (codePoint == ':' && !seenPasswordToken) {\n                seenPasswordToken = true;\n                continue;\n              }\n              var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n              if (seenPasswordToken) url.password += encodedCodePoints;\n              else url.username += encodedCodePoints;\n            }\n            buffer = '';\n          } else if (\n            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||\n            (chr == '\\\\' && url.isSpecial())\n          ) {\n            if (seenAt && buffer == '') return INVALID_AUTHORITY;\n            pointer -= arrayFrom(buffer).length + 1;\n            buffer = '';\n            state = HOST;\n          } else buffer += chr;\n          break;\n\n        case HOST:\n        case HOSTNAME:\n          if (stateOverride && url.scheme == 'file') {\n            state = FILE_HOST;\n            continue;\n          } else if (chr == ':' && !seenBracket) {\n            if (buffer == '') return INVALID_HOST;\n            failure = url.parseHost(buffer);\n            if (failure) return failure;\n            buffer = '';\n            state = PORT;\n            if (stateOverride == HOSTNAME) return;\n          } else if (\n            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||\n            (chr == '\\\\' && url.isSpecial())\n          ) {\n            if (url.isSpecial() && buffer == '') return INVALID_HOST;\n            if (stateOverride && buffer == '' && (url.includesCredentials() || url.port !== null)) return;\n            failure = url.parseHost(buffer);\n            if (failure) return failure;\n            buffer = '';\n            state = PATH_START;\n            if (stateOverride) return;\n            continue;\n          } else {\n            if (chr == '[') seenBracket = true;\n            else if (chr == ']') seenBracket = false;\n            buffer += chr;\n          } break;\n\n        case PORT:\n          if (exec(DIGIT, chr)) {\n            buffer += chr;\n          } else if (\n            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||\n            (chr == '\\\\' && url.isSpecial()) ||\n            stateOverride\n          ) {\n            if (buffer != '') {\n              var port = parseInt(buffer, 10);\n              if (port > 0xFFFF) return INVALID_PORT;\n              url.port = (url.isSpecial() && port === specialSchemes[url.scheme]) ? null : port;\n              buffer = '';\n            }\n            if (stateOverride) return;\n            state = PATH_START;\n            continue;\n          } else return INVALID_PORT;\n          break;\n\n        case FILE:\n          url.scheme = 'file';\n          if (chr == '/' || chr == '\\\\') state = FILE_SLASH;\n          else if (base && base.scheme == 'file') {\n            if (chr == EOF) {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              url.query = base.query;\n            } else if (chr == '?') {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              url.query = '';\n              state = QUERY;\n            } else if (chr == '#') {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              url.query = base.query;\n              url.fragment = '';\n              state = FRAGMENT;\n            } else {\n              if (!startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {\n                url.host = base.host;\n                url.path = arraySlice(base.path);\n                url.shortenPath();\n              }\n              state = PATH;\n              continue;\n            }\n          } else {\n            state = PATH;\n            continue;\n          } break;\n\n        case FILE_SLASH:\n          if (chr == '/' || chr == '\\\\') {\n            state = FILE_HOST;\n            break;\n          }\n          if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {\n            if (isWindowsDriveLetter(base.path[0], true)) push(url.path, base.path[0]);\n            else url.host = base.host;\n          }\n          state = PATH;\n          continue;\n\n        case FILE_HOST:\n          if (chr == EOF || chr == '/' || chr == '\\\\' || chr == '?' || chr == '#') {\n            if (!stateOverride && isWindowsDriveLetter(buffer)) {\n              state = PATH;\n            } else if (buffer == '') {\n              url.host = '';\n              if (stateOverride) return;\n              state = PATH_START;\n            } else {\n              failure = url.parseHost(buffer);\n              if (failure) return failure;\n              if (url.host == 'localhost') url.host = '';\n              if (stateOverride) return;\n              buffer = '';\n              state = PATH_START;\n            } continue;\n          } else buffer += chr;\n          break;\n\n        case PATH_START:\n          if (url.isSpecial()) {\n            state = PATH;\n            if (chr != '/' && chr != '\\\\') continue;\n          } else if (!stateOverride && chr == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (!stateOverride && chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          } else if (chr != EOF) {\n            state = PATH;\n            if (chr != '/') continue;\n          } break;\n\n        case PATH:\n          if (\n            chr == EOF || chr == '/' ||\n            (chr == '\\\\' && url.isSpecial()) ||\n            (!stateOverride && (chr == '?' || chr == '#'))\n          ) {\n            if (isDoubleDot(buffer)) {\n              url.shortenPath();\n              if (chr != '/' && !(chr == '\\\\' && url.isSpecial())) {\n                push(url.path, '');\n              }\n            } else if (isSingleDot(buffer)) {\n              if (chr != '/' && !(chr == '\\\\' && url.isSpecial())) {\n                push(url.path, '');\n              }\n            } else {\n              if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n                if (url.host) url.host = '';\n                buffer = charAt(buffer, 0) + ':'; // normalize windows drive letter\n              }\n              push(url.path, buffer);\n            }\n            buffer = '';\n            if (url.scheme == 'file' && (chr == EOF || chr == '?' || chr == '#')) {\n              while (url.path.length > 1 && url.path[0] === '') {\n                shift(url.path);\n              }\n            }\n            if (chr == '?') {\n              url.query = '';\n              state = QUERY;\n            } else if (chr == '#') {\n              url.fragment = '';\n              state = FRAGMENT;\n            }\n          } else {\n            buffer += percentEncode(chr, pathPercentEncodeSet);\n          } break;\n\n        case CANNOT_BE_A_BASE_URL_PATH:\n          if (chr == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          } else if (chr != EOF) {\n            url.path[0] += percentEncode(chr, C0ControlPercentEncodeSet);\n          } break;\n\n        case QUERY:\n          if (!stateOverride && chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          } else if (chr != EOF) {\n            if (chr == \"'\" && url.isSpecial()) url.query += '%27';\n            else if (chr == '#') url.query += '%23';\n            else url.query += percentEncode(chr, C0ControlPercentEncodeSet);\n          } break;\n\n        case FRAGMENT:\n          if (chr != EOF) url.fragment += percentEncode(chr, fragmentPercentEncodeSet);\n          break;\n      }\n\n      pointer++;\n    }\n  },\n  // https://url.spec.whatwg.org/#host-parsing\n  parseHost: function (input) {\n    var result, codePoints, index;\n    if (charAt(input, 0) == '[') {\n      if (charAt(input, input.length - 1) != ']') return INVALID_HOST;\n      result = parseIPv6(stringSlice(input, 1, -1));\n      if (!result) return INVALID_HOST;\n      this.host = result;\n    // opaque host\n    } else if (!this.isSpecial()) {\n      if (exec(FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT, input)) return INVALID_HOST;\n      result = '';\n      codePoints = arrayFrom(input);\n      for (index = 0; index < codePoints.length; index++) {\n        result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n      }\n      this.host = result;\n    } else {\n      input = toASCII(input);\n      if (exec(FORBIDDEN_HOST_CODE_POINT, input)) return INVALID_HOST;\n      result = parseIPv4(input);\n      if (result === null) return INVALID_HOST;\n      this.host = result;\n    }\n  },\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\n  cannotHaveUsernamePasswordPort: function () {\n    return !this.host || this.cannotBeABaseURL || this.scheme == 'file';\n  },\n  // https://url.spec.whatwg.org/#include-credentials\n  includesCredentials: function () {\n    return this.username != '' || this.password != '';\n  },\n  // https://url.spec.whatwg.org/#is-special\n  isSpecial: function () {\n    return hasOwn(specialSchemes, this.scheme);\n  },\n  // https://url.spec.whatwg.org/#shorten-a-urls-path\n  shortenPath: function () {\n    var path = this.path;\n    var pathSize = path.length;\n    if (pathSize && (this.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n      path.length--;\n    }\n  },\n  // https://url.spec.whatwg.org/#concept-url-serializer\n  serialize: function () {\n    var url = this;\n    var scheme = url.scheme;\n    var username = url.username;\n    var password = url.password;\n    var host = url.host;\n    var port = url.port;\n    var path = url.path;\n    var query = url.query;\n    var fragment = url.fragment;\n    var output = scheme + ':';\n    if (host !== null) {\n      output += '//';\n      if (url.includesCredentials()) {\n        output += username + (password ? ':' + password : '') + '@';\n      }\n      output += serializeHost(host);\n      if (port !== null) output += ':' + port;\n    } else if (scheme == 'file') output += '//';\n    output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';\n    if (query !== null) output += '?' + query;\n    if (fragment !== null) output += '#' + fragment;\n    return output;\n  },\n  // https://url.spec.whatwg.org/#dom-url-href\n  setHref: function (href) {\n    var failure = this.parse(href);\n    if (failure) throw TypeError(failure);\n    this.searchParams.update();\n  },\n  // https://url.spec.whatwg.org/#dom-url-origin\n  getOrigin: function () {\n    var scheme = this.scheme;\n    var port = this.port;\n    if (scheme == 'blob') try {\n      return new URLConstructor(scheme.path[0]).origin;\n    } catch (error) {\n      return 'null';\n    }\n    if (scheme == 'file' || !this.isSpecial()) return 'null';\n    return scheme + '://' + serializeHost(this.host) + (port !== null ? ':' + port : '');\n  },\n  // https://url.spec.whatwg.org/#dom-url-protocol\n  getProtocol: function () {\n    return this.scheme + ':';\n  },\n  setProtocol: function (protocol) {\n    this.parse($toString(protocol) + ':', SCHEME_START);\n  },\n  // https://url.spec.whatwg.org/#dom-url-username\n  getUsername: function () {\n    return this.username;\n  },\n  setUsername: function (username) {\n    var codePoints = arrayFrom($toString(username));\n    if (this.cannotHaveUsernamePasswordPort()) return;\n    this.username = '';\n    for (var i = 0; i < codePoints.length; i++) {\n      this.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n    }\n  },\n  // https://url.spec.whatwg.org/#dom-url-password\n  getPassword: function () {\n    return this.password;\n  },\n  setPassword: function (password) {\n    var codePoints = arrayFrom($toString(password));\n    if (this.cannotHaveUsernamePasswordPort()) return;\n    this.password = '';\n    for (var i = 0; i < codePoints.length; i++) {\n      this.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n    }\n  },\n  // https://url.spec.whatwg.org/#dom-url-host\n  getHost: function () {\n    var host = this.host;\n    var port = this.port;\n    return host === null ? ''\n      : port === null ? serializeHost(host)\n      : serializeHost(host) + ':' + port;\n  },\n  setHost: function (host) {\n    if (this.cannotBeABaseURL) return;\n    this.parse(host, HOST);\n  },\n  // https://url.spec.whatwg.org/#dom-url-hostname\n  getHostname: function () {\n    var host = this.host;\n    return host === null ? '' : serializeHost(host);\n  },\n  setHostname: function (hostname) {\n    if (this.cannotBeABaseURL) return;\n    this.parse(hostname, HOSTNAME);\n  },\n  // https://url.spec.whatwg.org/#dom-url-port\n  getPort: function () {\n    var port = this.port;\n    return port === null ? '' : $toString(port);\n  },\n  setPort: function (port) {\n    if (this.cannotHaveUsernamePasswordPort()) return;\n    port = $toString(port);\n    if (port == '') this.port = null;\n    else this.parse(port, PORT);\n  },\n  // https://url.spec.whatwg.org/#dom-url-pathname\n  getPathname: function () {\n    var path = this.path;\n    return this.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';\n  },\n  setPathname: function (pathname) {\n    if (this.cannotBeABaseURL) return;\n    this.path = [];\n    this.parse(pathname, PATH_START);\n  },\n  // https://url.spec.whatwg.org/#dom-url-search\n  getSearch: function () {\n    var query = this.query;\n    return query ? '?' + query : '';\n  },\n  setSearch: function (search) {\n    search = $toString(search);\n    if (search == '') {\n      this.query = null;\n    } else {\n      if ('?' == charAt(search, 0)) search = stringSlice(search, 1);\n      this.query = '';\n      this.parse(search, QUERY);\n    }\n    this.searchParams.update();\n  },\n  // https://url.spec.whatwg.org/#dom-url-searchparams\n  getSearchParams: function () {\n    return this.searchParams.facade;\n  },\n  // https://url.spec.whatwg.org/#dom-url-hash\n  getHash: function () {\n    var fragment = this.fragment;\n    return fragment ? '#' + fragment : '';\n  },\n  setHash: function (hash) {\n    hash = $toString(hash);\n    if (hash == '') {\n      this.fragment = null;\n      return;\n    }\n    if ('#' == charAt(hash, 0)) hash = stringSlice(hash, 1);\n    this.fragment = '';\n    this.parse(hash, FRAGMENT);\n  },\n  update: function () {\n    this.query = this.searchParams.serialize() || null;\n  }\n};\n\n// `URL` constructor\n// https://url.spec.whatwg.org/#url-class\nvar URLConstructor = function URL(url /* , base */) {\n  var that = anInstance(this, URLPrototype);\n  var base = validateArgumentsLength(arguments.length, 1) > 1 ? arguments[1] : undefined;\n  var state = setInternalState(that, new URLState(url, false, base));\n  if (!DESCRIPTORS) {\n    that.href = state.serialize();\n    that.origin = state.getOrigin();\n    that.protocol = state.getProtocol();\n    that.username = state.getUsername();\n    that.password = state.getPassword();\n    that.host = state.getHost();\n    that.hostname = state.getHostname();\n    that.port = state.getPort();\n    that.pathname = state.getPathname();\n    that.search = state.getSearch();\n    that.searchParams = state.getSearchParams();\n    that.hash = state.getHash();\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar accessorDescriptor = function (getter, setter) {\n  return {\n    get: function () {\n      return getInternalURLState(this)[getter]();\n    },\n    set: setter && function (value) {\n      return getInternalURLState(this)[setter](value);\n    },\n    configurable: true,\n    enumerable: true\n  };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor('serialize', 'setHref'),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor('getOrigin'),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor('getProtocol', 'setProtocol'),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor('getUsername', 'setUsername'),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor('getPassword', 'setPassword'),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor('getHost', 'setHost'),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor('getHostname', 'setHostname'),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor('getPort', 'setPort'),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor('getPathname', 'setPathname'),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor('getSearch', 'setSearch'),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor('getSearchParams'),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor('getHash', 'setHash')\n  });\n}\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return getInternalURLState(this).serialize();\n}, { enumerable: true });\n\n// `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\nredefine(URLPrototype, 'toString', function toString() {\n  return getInternalURLState(this).serialize();\n}, { enumerable: true });\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n  // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', bind(nativeCreateObjectURL, NativeURL));\n  // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', bind(nativeRevokeObjectURL, NativeURL));\n}\n\nsetToStringTag(URLConstructor, 'URL');\n\n$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {\n  URL: URLConstructor\n});\n"]},"metadata":{},"sourceType":"script"}