{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addStorageEventListener = addStorageEventListener;\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports[\"default\"] = void 0;\nexports.getLocalStorage = getLocalStorage;\nexports.microSeconds = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.removeStorageEventListener = removeStorageEventListener;\nexports.storageKey = storageKey;\nexports.type = void 0;\n\nvar _obliviousSet = require(\"oblivious-set\");\n\nvar _options = require(\"../options\");\n\nvar _util = require(\"../util\");\n/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\n\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nvar type = 'localstorage';\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\n\nexports.type = type;\n\nfunction getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {// New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n\n  return localStorage;\n}\n\nfunction storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\n\n\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    (0, _util.sleep)().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: (0, _util.randomToken)(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\n\nfunction addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n\n  window.addEventListener('storage', listener);\n  return listener;\n}\n\nfunction removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\n\nfunction create(channelName, options) {\n  options = (0, _options.fillOptionsWithDefaults)(options);\n\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n\n  var uuid = (0, _util.randomToken)();\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n\n  var eMIs = new _obliviousSet.ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n\n  };\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n\n    if (msgObj.uuid === uuid) return; // own message\n\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\n\nfunction close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\n\nfunction onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  if (_util.isNode) return false;\n  var ls = getLocalStorage();\n  if (!ls) return false;\n\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n\n  return true;\n}\n\nfunction averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n\n  return defaultTime;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/broadcast-channel/dist/lib/methods/localstorage.js"],"names":["Object","defineProperty","exports","value","addStorageEventListener","averageResponseTime","canBeUsed","close","create","getLocalStorage","microSeconds","onMessage","postMessage","removeStorageEventListener","storageKey","type","_obliviousSet","require","_options","_util","KEY_PREFIX","localStorage","window","e","channelName","channelState","messageJson","Promise","res","sleep","then","key","writeObj","token","randomToken","time","Date","getTime","data","uuid","JSON","stringify","setItem","ev","document","createEvent","initEvent","newValue","dispatchEvent","fn","listener","parse","addEventListener","removeEventListener","options","fillOptionsWithDefaults","Error","eMIs","ObliviousSet","localstorage","removeTimeout","state","msgObj","messagesCallback","has","messagesCallbackTime","add","isNode","ls","removeItem","defaultTime","userAgent","navigator","toLowerCase","includes","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addStorageEventListener = addStorageEventListener;\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports[\"default\"] = void 0;\nexports.getLocalStorage = getLocalStorage;\nexports.microSeconds = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.removeStorageEventListener = removeStorageEventListener;\nexports.storageKey = storageKey;\nexports.type = void 0;\n\nvar _obliviousSet = require(\"oblivious-set\");\n\nvar _options = require(\"../options\");\n\nvar _util = require(\"../util\");\n\n/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nvar type = 'localstorage';\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\n\nexports.type = type;\n\nfunction getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {// New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n\n  return localStorage;\n}\n\nfunction storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\n\n\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    (0, _util.sleep)().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: (0, _util.randomToken)(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\n\nfunction addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n\n  window.addEventListener('storage', listener);\n  return listener;\n}\n\nfunction removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\n\nfunction create(channelName, options) {\n  options = (0, _options.fillOptionsWithDefaults)(options);\n\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n\n  var uuid = (0, _util.randomToken)();\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n\n  var eMIs = new _obliviousSet.ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n\n  };\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n\n    if (msgObj.uuid === uuid) return; // own message\n\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\n\nfunction close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\n\nfunction onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  if (_util.isNode) return false;\n  var ls = getLocalStorage();\n  if (!ls) return false;\n\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n\n  return true;\n}\n\nfunction averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n\n  return defaultTime;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}