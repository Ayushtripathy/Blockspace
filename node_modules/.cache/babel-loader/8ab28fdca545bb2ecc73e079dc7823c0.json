{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nvar _require = require('uuid'),\n    uuidv4 = _require.v4;\n\nvar iidCache = null;\nvar InstallationController = {\n  currentInstallationId: function ()\n  /*: Promise<string>*/\n  {\n    if (typeof iidCache === 'string') {\n      return _promise.default.resolve(iidCache);\n    }\n\n    var path = _Storage.default.generatePath('installationId');\n\n    return _Storage.default.getItemAsync(path).then(function (iid) {\n      if (!iid) {\n        iid = uuidv4();\n        return _Storage.default.setItemAsync(path, iid).then(function () {\n          iidCache = iid;\n          return iid;\n        });\n      }\n\n      iidCache = iid;\n      return iid;\n    });\n  },\n  _clearCache: function () {\n    iidCache = null;\n  },\n  _setInstallationIdCache: function (iid\n  /*: string*/\n  ) {\n    iidCache = iid;\n  }\n};\nmodule.exports = InstallationController;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Twitter-Start/node_modules/moralis/lib/browser/InstallationController.js"],"names":["_interopRequireDefault","require","_promise","_Storage","_require","uuidv4","v4","iidCache","InstallationController","currentInstallationId","default","resolve","path","generatePath","getItemAsync","then","iid","setItemAsync","_clearCache","_setInstallationIdCache","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,sDAAD,CAApC;;AAEA,IAAIC,QAAQ,GAAGF,sBAAsB,CAACC,OAAO,CAAC,+CAAD,CAAR,CAArC;;AAEA,IAAIE,QAAQ,GAAGH,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAArC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,MAAD,CAAtB;AAAA,IACII,MAAM,GAAGD,QAAQ,CAACE,EADtB;;AAGA,IAAIC,QAAQ,GAAG,IAAf;AACA,IAAIC,sBAAsB,GAAG;AAC3BC,EAAAA,qBAAqB,EAAE;AACvB;AACA;AACE,QAAI,OAAOF,QAAP,KAAoB,QAAxB,EAAkC;AAChC,aAAOL,QAAQ,CAACQ,OAAT,CAAiBC,OAAjB,CAAyBJ,QAAzB,CAAP;AACD;;AAED,QAAIK,IAAI,GAAGT,QAAQ,CAACO,OAAT,CAAiBG,YAAjB,CAA8B,gBAA9B,CAAX;;AAEA,WAAOV,QAAQ,CAACO,OAAT,CAAiBI,YAAjB,CAA8BF,IAA9B,EAAoCG,IAApC,CAAyC,UAAUC,GAAV,EAAe;AAC7D,UAAI,CAACA,GAAL,EAAU;AACRA,QAAAA,GAAG,GAAGX,MAAM,EAAZ;AACA,eAAOF,QAAQ,CAACO,OAAT,CAAiBO,YAAjB,CAA8BL,IAA9B,EAAoCI,GAApC,EAAyCD,IAAzC,CAA8C,YAAY;AAC/DR,UAAAA,QAAQ,GAAGS,GAAX;AACA,iBAAOA,GAAP;AACD,SAHM,CAAP;AAID;;AAEDT,MAAAA,QAAQ,GAAGS,GAAX;AACA,aAAOA,GAAP;AACD,KAXM,CAAP;AAYD,GAtB0B;AAuB3BE,EAAAA,WAAW,EAAE,YAAY;AACvBX,IAAAA,QAAQ,GAAG,IAAX;AACD,GAzB0B;AA0B3BY,EAAAA,uBAAuB,EAAE,UAAUH;AACnC;AADyB,IAEvB;AACAT,IAAAA,QAAQ,GAAGS,GAAX;AACD;AA9B0B,CAA7B;AAgCAI,MAAM,CAACC,OAAP,GAAiBb,sBAAjB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nvar _require = require('uuid'),\n    uuidv4 = _require.v4;\n\nvar iidCache = null;\nvar InstallationController = {\n  currentInstallationId: function ()\n  /*: Promise<string>*/\n  {\n    if (typeof iidCache === 'string') {\n      return _promise.default.resolve(iidCache);\n    }\n\n    var path = _Storage.default.generatePath('installationId');\n\n    return _Storage.default.getItemAsync(path).then(function (iid) {\n      if (!iid) {\n        iid = uuidv4();\n        return _Storage.default.setItemAsync(path, iid).then(function () {\n          iidCache = iid;\n          return iid;\n        });\n      }\n\n      iidCache = iid;\n      return iid;\n    });\n  },\n  _clearCache: function () {\n    iidCache = null;\n  },\n  _setInstallationIdCache: function (iid\n  /*: string*/\n  ) {\n    iidCache = iid;\n  }\n};\nmodule.exports = InstallationController;"]},"metadata":{},"sourceType":"script"}